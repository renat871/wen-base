{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n  assert.hash(hash);\n  var opts = checkOpts({\n    dkLen: 32,\n    asyncTick: 10\n  }, _opts);\n  var c = opts.c,\n    dkLen = opts.dkLen,\n    asyncTick = opts.asyncTick;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  var password = toBytes(_password);\n  var salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  var DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  var PRF = hmac.create(hash, password);\n  var PRFSalt = PRF._cloneInto().update(salt);\n  return {\n    c: c,\n    dkLen: dkLen,\n    asyncTick: asyncTick,\n    DK: DK,\n    PRF: PRF,\n    PRFSalt: PRFSalt\n  };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n  var _pbkdf2Init = pbkdf2Init(hash, password, salt, opts),\n    c = _pbkdf2Init.c,\n    dkLen = _pbkdf2Init.dkLen,\n    DK = _pbkdf2Init.DK,\n    PRF = _pbkdf2Init.PRF,\n    PRFSalt = _pbkdf2Init.PRFSalt;\n  var prfW; // Working copy\n  var arr = new Uint8Array(4);\n  var view = createView(arr);\n  var u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (var ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    var Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (var ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (var i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport function pbkdf2Async(_x, _x2, _x3, _x4) {\n  return _pbkdf2Async.apply(this, arguments);\n}\nfunction _pbkdf2Async() {\n  _pbkdf2Async = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(hash, password, salt, opts) {\n    var _pbkdf2Init2, c, dkLen, asyncTick, DK, PRF, PRFSalt, prfW, arr, view, u, _loop, ti, pos;\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _pbkdf2Init2 = pbkdf2Init(hash, password, salt, opts), c = _pbkdf2Init2.c, dkLen = _pbkdf2Init2.dkLen, asyncTick = _pbkdf2Init2.asyncTick, DK = _pbkdf2Init2.DK, PRF = _pbkdf2Init2.PRF, PRFSalt = _pbkdf2Init2.PRFSalt;\n          // Working copy\n          arr = new Uint8Array(4);\n          view = createView(arr);\n          u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen\n          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n            var Ti;\n            return _regeneratorRuntime().wrap(function _loop$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  // Ti = F(Password, Salt, c, i)\n                  Ti = DK.subarray(pos, pos + PRF.outputLen);\n                  view.setInt32(0, ti, false);\n                  // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n                  // U1 = PRF(Password, Salt + INT_32_BE(i))\n                  (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n                  Ti.set(u.subarray(0, Ti.length));\n                  _context.next = 6;\n                  return asyncLoop(c - 1, asyncTick, function (i) {\n                    // Uc = PRF(Password, Uc−1)\n                    PRF._cloneInto(prfW).update(u).digestInto(u);\n                    for (var _i = 0; _i < Ti.length; _i++) Ti[_i] ^= u[_i];\n                  });\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _loop);\n          });\n          ti = 1, pos = 0;\n        case 6:\n          if (!(pos < dkLen)) {\n            _context2.next = 11;\n            break;\n          }\n          return _context2.delegateYield(_loop(), \"t0\", 8);\n        case 8:\n          ti++, pos += PRF.outputLen;\n          _context2.next = 6;\n          break;\n        case 11:\n          return _context2.abrupt(\"return\", pbkdf2Output(PRF, PRFSalt, DK, prfW, u));\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee);\n  }));\n  return _pbkdf2Async.apply(this, arguments);\n}","map":{"version":3,"names":["assert","hmac","createView","toBytes","checkOpts","asyncLoop","pbkdf2Init","hash","_password","_salt","_opts","opts","dkLen","asyncTick","c","number","Error","password","salt","DK","Uint8Array","PRF","create","PRFSalt","_cloneInto","update","pbkdf2Output","prfW","u","destroy","fill","pbkdf2","_pbkdf2Init","arr","view","outputLen","ti","pos","Ti","subarray","setInt32","digestInto","set","length","ui","i","pbkdf2Async","_x","_x2","_x3","_x4","_pbkdf2Async","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_pbkdf2Init2","_loop","wrap","_callee$","_context2","prev","next","_loop$","_context","stop","delegateYield","abrupt"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\@noble\\hashes\\src\\pbkdf2.ts"],"sourcesContent":["import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}