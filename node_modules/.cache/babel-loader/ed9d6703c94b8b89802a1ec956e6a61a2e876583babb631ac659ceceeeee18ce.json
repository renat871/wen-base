{"ast":null,"code":"import _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport WebSocket from 'isomorphic-ws';\nimport { isNullish, SocketProvider } from 'web3-utils';\nimport { ConnectionNotOpenError } from 'web3-errors';\n/**\n * Use WebSocketProvider to connect to a Node using a WebSocket connection, i.e. over the `ws` or `wss` protocol.\n *\n * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{\n * \t\t\theaders: {\n * \t\t\t\t// to provide the API key if the Node requires the key to be inside the `headers` for example:\n * \t\t\t\t'x-api-key': '<Api key>',\n * \t\t\t},\n * \t\t},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n *\n * The second and the third parameters are both optional. And you can for example, the second parameter could be an empty object or undefined.\n *  * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n */\nvar WebSocketProvider = /*#__PURE__*/function (_SocketProvider) {\n  _inherits(WebSocketProvider, _SocketProvider);\n  var _super = _createSuper(WebSocketProvider);\n  /**\n   * This is a class used for Web Socket connections. It extends the abstract class SocketProvider {@link SocketProvider} that extends the EIP-1193 provider {@link EIP1193Provider}.\n   * @param socketPath - The path to the Web Socket.\n   * @param socketOptions - The options for the Web Socket client.\n   * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n   */\n  // this constructor is to specify the type for `socketOptions` for a better intellisense.\n  // eslint-disable-next-line no-useless-constructor\n  function WebSocketProvider(socketPath, socketOptions, reconnectOptions) {\n    _classCallCheck(this, WebSocketProvider);\n    return _super.call(this, socketPath, socketOptions, reconnectOptions);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  _createClass(WebSocketProvider, [{\n    key: \"_validateProviderPath\",\n    value: function _validateProviderPath(providerUrl) {\n      return typeof providerUrl === 'string' ? /^ws(s)?:\\/\\//i.test(providerUrl) : false;\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      if (this._socketConnection && !isNullish(this._socketConnection)) {\n        switch (this._socketConnection.readyState) {\n          case this._socketConnection.CONNECTING:\n            {\n              return 'connecting';\n            }\n          case this._socketConnection.OPEN:\n            {\n              return 'connected';\n            }\n          default:\n            {\n              return 'disconnected';\n            }\n        }\n      }\n      return 'disconnected';\n    }\n  }, {\n    key: \"_openSocketConnection\",\n    value: function _openSocketConnection() {\n      this._socketConnection = new WebSocket(this._socketPath, undefined, this._socketOptions && Object.keys(this._socketOptions).length === 0 ? undefined : this._socketOptions);\n    }\n  }, {\n    key: \"_closeSocketConnection\",\n    value: function _closeSocketConnection(code, data) {\n      var _a;\n      (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.close(code, data);\n    }\n  }, {\n    key: \"_sendToSocket\",\n    value: function _sendToSocket(payload) {\n      var _a;\n      if (this.getStatus() === 'disconnected') {\n        throw new ConnectionNotOpenError();\n      }\n      (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(payload));\n    }\n  }, {\n    key: \"_parseResponses\",\n    value: function _parseResponses(event) {\n      return this.chunkResponseParser.parseResponse(event.data);\n    }\n  }, {\n    key: \"_addSocketListeners\",\n    value: function _addSocketListeners() {\n      var _this = this;\n      var _a, _b, _c, _d;\n      (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.addEventListener('open', this._onOpenHandler);\n      (_b = this._socketConnection) === null || _b === void 0 ? void 0 : _b.addEventListener('message', this._onMessageHandler);\n      (_c = this._socketConnection) === null || _c === void 0 ? void 0 : _c.addEventListener('close', function (e) {\n        return _this._onCloseHandler(e);\n      });\n      (_d = this._socketConnection) === null || _d === void 0 ? void 0 : _d.addEventListener('error', this._onErrorHandler);\n    }\n  }, {\n    key: \"_removeSocketListeners\",\n    value: function _removeSocketListeners() {\n      var _a, _b, _c;\n      (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.removeEventListener('message', this._onMessageHandler);\n      (_b = this._socketConnection) === null || _b === void 0 ? void 0 : _b.removeEventListener('open', this._onOpenHandler);\n      (_c = this._socketConnection) === null || _c === void 0 ? void 0 : _c.removeEventListener('close', this._onCloseHandler);\n      // note: we intentionally keep the error event listener to be able to emit it in case an error happens when closing the connection\n    }\n  }, {\n    key: \"_onCloseEvent\",\n    value: function _onCloseEvent(event) {\n      var _a;\n      if (this._reconnectOptions.autoReconnect && (![1000, 1001].includes(event.code) || !event.wasClean)) {\n        this._reconnect();\n        return;\n      }\n      this._clearQueues(event);\n      this._removeSocketListeners();\n      this._onDisconnect(event.code, event.reason);\n      // disconnect was successful and can safely remove error listener\n      (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.removeEventListener('error', this._onErrorHandler);\n    }\n  }]);\n  return WebSocketProvider;\n}(SocketProvider);\nexport { WebSocketProvider as default };\nexport { WebSocketProvider };","map":{"version":3,"names":["WebSocket","isNullish","SocketProvider","ConnectionNotOpenError","WebSocketProvider","_SocketProvider","_inherits","_super","_createSuper","socketPath","socketOptions","reconnectOptions","_classCallCheck","call","_createClass","key","value","_validateProviderPath","providerUrl","test","getStatus","_socketConnection","readyState","CONNECTING","OPEN","_openSocketConnection","_socketPath","undefined","_socketOptions","Object","keys","length","_closeSocketConnection","code","data","_a","close","_sendToSocket","payload","send","JSON","stringify","_parseResponses","event","chunkResponseParser","parseResponse","_addSocketListeners","_this","addEventListener","_onOpenHandler","_b","_onMessageHandler","_c","e","_onCloseHandler","_d","_onErrorHandler","_removeSocketListeners","removeEventListener","_onCloseEvent","_reconnectOptions","autoReconnect","includes","wasClean","_reconnect","_clearQueues","_onDisconnect","reason","default"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-providers-ws\\src\\index.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ClientRequestArgs } from 'http';\nimport WebSocket, { ClientOptions, CloseEvent } from 'isomorphic-ws';\nimport {\n\tEthExecutionAPI,\n\tWeb3APIMethod,\n\tWeb3APIPayload,\n\tWeb3APISpec,\n\tWeb3ProviderStatus,\n} from 'web3-types';\nimport { isNullish, ReconnectOptions, SocketProvider } from 'web3-utils';\nimport { ConnectionNotOpenError } from 'web3-errors';\n\nexport { ClientRequestArgs } from 'http';\n\nexport { ClientOptions } from 'isomorphic-ws';\n\n/**\n * Use WebSocketProvider to connect to a Node using a WebSocket connection, i.e. over the `ws` or `wss` protocol.\n *\n * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{\n * \t\t\theaders: {\n * \t\t\t\t// to provide the API key if the Node requires the key to be inside the `headers` for example:\n * \t\t\t\t'x-api-key': '<Api key>',\n * \t\t\t},\n * \t\t},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n *\n * The second and the third parameters are both optional. And you can for example, the second parameter could be an empty object or undefined.\n *  * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n */\nexport default class WebSocketProvider<\n\tAPI extends Web3APISpec = EthExecutionAPI,\n> extends SocketProvider<WebSocket.MessageEvent, WebSocket.CloseEvent, WebSocket.ErrorEvent, API> {\n\tprotected readonly _socketOptions?: ClientOptions | ClientRequestArgs;\n\n\tprotected _socketConnection?: WebSocket;\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprotected _validateProviderPath(providerUrl: string): boolean {\n\t\treturn typeof providerUrl === 'string' ? /^ws(s)?:\\/\\//i.test(providerUrl) : false;\n\t}\n\n\t/**\n\t * This is a class used for Web Socket connections. It extends the abstract class SocketProvider {@link SocketProvider} that extends the EIP-1193 provider {@link EIP1193Provider}.\n\t * @param socketPath - The path to the Web Socket.\n\t * @param socketOptions - The options for the Web Socket client.\n\t * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n\t */\n\t// this constructor is to specify the type for `socketOptions` for a better intellisense.\n\t// eslint-disable-next-line no-useless-constructor\n\tpublic constructor(\n\t\tsocketPath: string,\n\t\tsocketOptions?: ClientOptions | ClientRequestArgs,\n\t\treconnectOptions?: Partial<ReconnectOptions>,\n\t) {\n\t\tsuper(socketPath, socketOptions, reconnectOptions);\n\t}\n\n\tpublic getStatus(): Web3ProviderStatus {\n\t\tif (this._socketConnection && !isNullish(this._socketConnection)) {\n\t\t\tswitch (this._socketConnection.readyState) {\n\t\t\t\tcase this._socketConnection.CONNECTING: {\n\t\t\t\t\treturn 'connecting';\n\t\t\t\t}\n\t\t\t\tcase this._socketConnection.OPEN: {\n\t\t\t\t\treturn 'connected';\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\treturn 'disconnected';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 'disconnected';\n\t}\n\n\tprotected _openSocketConnection() {\n\t\tthis._socketConnection = new WebSocket(\n\t\t\tthis._socketPath,\n\t\t\tundefined,\n\t\t\tthis._socketOptions && Object.keys(this._socketOptions).length === 0\n\t\t\t\t? undefined\n\t\t\t\t: this._socketOptions,\n\t\t);\n\t}\n\n\tprotected _closeSocketConnection(code?: number, data?: string) {\n\t\tthis._socketConnection?.close(code, data);\n\t}\n\n\tprotected _sendToSocket<Method extends Web3APIMethod<API>>(\n\t\tpayload: Web3APIPayload<API, Method>,\n\t): void {\n\t\tif (this.getStatus() === 'disconnected') {\n\t\t\tthrow new ConnectionNotOpenError();\n\t\t}\n\t\tthis._socketConnection?.send(JSON.stringify(payload));\n\t}\n\n\tprotected _parseResponses(event: WebSocket.MessageEvent) {\n\t\treturn this.chunkResponseParser.parseResponse(event.data as string);\n\t}\n\n\tprotected _addSocketListeners(): void {\n\t\tthis._socketConnection?.addEventListener('open', this._onOpenHandler);\n\t\tthis._socketConnection?.addEventListener('message', this._onMessageHandler);\n\t\tthis._socketConnection?.addEventListener('close', e => this._onCloseHandler(e));\n\t\tthis._socketConnection?.addEventListener('error', this._onErrorHandler);\n\t}\n\n\tprotected _removeSocketListeners(): void {\n\t\tthis._socketConnection?.removeEventListener('message', this._onMessageHandler);\n\t\tthis._socketConnection?.removeEventListener('open', this._onOpenHandler);\n\t\tthis._socketConnection?.removeEventListener('close', this._onCloseHandler);\n\t\t// note: we intentionally keep the error event listener to be able to emit it in case an error happens when closing the connection\n\t}\n\n\tprotected _onCloseEvent(event: CloseEvent): void {\n\t\tif (\n\t\t\tthis._reconnectOptions.autoReconnect &&\n\t\t\t(![1000, 1001].includes(event.code) || !event.wasClean)\n\t\t) {\n\t\t\tthis._reconnect();\n\t\t\treturn;\n\t\t}\n\t\tthis._clearQueues(event);\n\t\tthis._removeSocketListeners();\n\t\tthis._onDisconnect(event.code, event.reason);\n\t\t// disconnect was successful and can safely remove error listener\n\t\tthis._socketConnection?.removeEventListener('error', this._onErrorHandler);\n\t}\n}\n\nexport { WebSocketProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}