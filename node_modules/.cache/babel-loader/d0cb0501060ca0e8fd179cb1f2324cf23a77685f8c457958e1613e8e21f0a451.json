{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { format } from 'web3-utils';\nimport { netRpcMethods } from 'web3-rpc-methods';\nexport function getId(web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return netRpcMethods.getId(web3Context.requestManager);\n        case 2:\n          response = _context.sent;\n          return _context.abrupt(\"return\", format({\n            format: 'uint'\n          }, response, returnFormat));\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n}\nexport function getPeerCount(web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return netRpcMethods.getPeerCount(web3Context.requestManager);\n        case 2:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", format({\n            format: 'uint'\n          }, response, returnFormat));\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n}\nexport var isListening = function isListening(web3Context) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", netRpcMethods.isListening(web3Context.requestManager));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n};","map":{"version":3,"names":["format","netRpcMethods","getId","web3Context","returnFormat","requestManager","response","_context","sent","abrupt","stop","_callee","getPeerCount","_context2","_callee2","isListening","__awaiter","_regeneratorRuntime","mark","_callee3","wrap","_callee3$","_context3","prev","next"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-net\\src\\rpc_method_wrappers.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { format } from 'web3-utils';\nimport { Web3Context } from 'web3-core';\nimport { DataFormat, Web3NetAPI } from 'web3-types';\nimport { netRpcMethods } from 'web3-rpc-methods';\n\nexport async function getId<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<Web3NetAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await netRpcMethods.getId(web3Context.requestManager);\n\n\treturn format({ format: 'uint' }, response as unknown as number, returnFormat);\n}\n\nexport async function getPeerCount<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<Web3NetAPI>,\n\treturnFormat: ReturnFormat,\n) {\n\tconst response = await netRpcMethods.getPeerCount(web3Context.requestManager);\n\n\t// Data returned is number in hex format\n\treturn format({ format: 'uint' }, response as unknown as number, returnFormat);\n}\n\nexport const isListening = async (web3Context: Web3Context<Web3NetAPI>) =>\n\tnetRpcMethods.isListening(web3Context.requestManager);\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,SAASA,MAAM,QAAQ,YAAY;AAGnC,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAM,SAAgBC,KAAKA,CAC1BC,WAAoC,EACpCC,YAA0B;;;;;;;UAET,OAAMH,aAAa,CAACC,KAAK,CAACC,WAAW,CAACE,cAAc,CAAC;QAAA;UAAhEC,QAAQ,GAAAC,QAAA,CAAAC,IAAA;UAAA,OAAAD,QAAA,CAAAE,MAAA,WAEPT,MAAM,CAAC;YAAEA,MAAM,EAAE;UAAM,CAAE,EAAEM,QAA6B,EAAEF,YAAY,CAAC;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAG,IAAA;MAAA;IAAA,GAAAC,OAAA;EAAA,CAC9E;;AAED,OAAM,SAAgBC,YAAYA,CACjCT,WAAoC,EACpCC,YAA0B;;;;;;;UAET,OAAMH,aAAa,CAACW,YAAY,CAACT,WAAW,CAACE,cAAc,CAAC;QAAA;UAAvEC,QAAQ,GAAAO,SAAA,CAAAL,IAAA;UAAA,OAAAK,SAAA,CAAAJ,MAAA,WAGPT,MAAM,CAAC;YAAEA,MAAM,EAAE;UAAM,CAAE,EAAEM,QAA6B,EAAEF,YAAY,CAAC;QAAA;QAAA;UAAA,OAAAS,SAAA,CAAAH,IAAA;MAAA;IAAA,GAAAI,QAAA;EAAA,CAC9E;;AAED,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAUZ,WAAoC;EAAA,OAAIa,SAAA,sCAAAC,mBAAA,GAAAC,IAAA,UAAAC,SAAA;IAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAAA,OAAAF,SAAA,CAAAb,MAAA,WACzER,aAAa,CAACc,WAAW,CAACZ,WAAW,CAACE,cAAc,CAAC;QAAA;QAAA;UAAA,OAAAiB,SAAA,CAAAZ,IAAA;MAAA;IAAA,GAAAS,QAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}