{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nexport function getId(requestManager) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", requestManager.send({\n            method: 'net_version',\n            params: []\n          }));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n}\nexport function getPeerCount(requestManager) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", requestManager.send({\n            method: 'net_peerCount',\n            params: []\n          }));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n}\nexport function isListening(requestManager) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", requestManager.send({\n            method: 'net_listening',\n            params: []\n          }));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n}","map":{"version":3,"names":["getId","requestManager","send","method","params","_context","stop","_callee","getPeerCount","_context2","_callee2","isListening","_context3","_callee3"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-rpc-methods\\src\\net_rpc_methods.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3RequestManager } from 'web3-core';\nimport { Web3NetAPI } from 'web3-types';\n\nexport async function getId(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_version',\n\t\tparams: [],\n\t});\n}\n\nexport async function getPeerCount(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_peerCount',\n\t\tparams: [],\n\t});\n}\n\nexport async function isListening(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_listening',\n\t\tparams: [],\n\t});\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,OAAM,SAAgBA,KAAKA,CAACC,cAA8C;;;;;2CAClEA,cAAc,CAACC,IAAI,CAAC;YAC1BC,MAAM,EAAE,aAAa;YACrBC,MAAM,EAAE;WACR,CAAC;QAAA;QAAA;UAAA,OAAAC,QAAA,CAAAC,IAAA;MAAA;IAAA,GAAAC,OAAA;EAAA,CACF;;AAED,OAAM,SAAgBC,YAAYA,CAACP,cAA8C;;;;;4CACzEA,cAAc,CAACC,IAAI,CAAC;YAC1BC,MAAM,EAAE,eAAe;YACvBC,MAAM,EAAE;WACR,CAAC;QAAA;QAAA;UAAA,OAAAK,SAAA,CAAAH,IAAA;MAAA;IAAA,GAAAI,QAAA;EAAA,CACF;;AAED,OAAM,SAAgBC,WAAWA,CAACV,cAA8C;;;;;4CACxEA,cAAc,CAACC,IAAI,CAAC;YAC1BC,MAAM,EAAE,eAAe;YACvBC,MAAM,EAAE;WACR,CAAC;QAAA;QAAA;UAAA,OAAAQ,SAAA,CAAAN,IAAA;MAAA;IAAA,GAAAO,QAAA;EAAA,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}