{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3BaseProvider } from 'web3-types';\nimport { EventEmitter } from 'events';\nimport { EIP1193ProviderRpcError } from 'web3-errors';\nimport { toPayload } from './json_rpc.js';\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */\nexport var Eip1193Provider = /*#__PURE__*/function (_Web3BaseProvider) {\n  _inherits(Eip1193Provider, _Web3BaseProvider);\n  var _super = _createSuper(Eip1193Provider);\n  function Eip1193Provider() {\n    var _this;\n    _classCallCheck(this, Eip1193Provider);\n    _this = _super.apply(this, arguments);\n    _this._eventEmitter = new EventEmitter();\n    _this._chainId = '';\n    _this._accounts = [];\n    return _this;\n  }\n  _createClass(Eip1193Provider, [{\n    key: \"_getChainId\",\n    value: function _getChainId() {\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.request(toPayload({\n                method: 'eth_chainId',\n                params: []\n              }));\n            case 2:\n              data = _context.sent;\n              return _context.abrupt(\"return\", (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : '');\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"_getAccounts\",\n    value: function _getAccounts() {\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.request(toPayload({\n                method: 'eth_accounts',\n                params: []\n              }));\n            case 2:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : []);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"_onConnect\",\n    value: function _onConnect() {\n      var _this2 = this;\n      Promise.all([this._getChainId().then(function (chainId) {\n        if (chainId !== _this2._chainId) {\n          _this2._chainId = chainId;\n          _this2._eventEmitter.emit('chainChanged', _this2._chainId);\n        }\n      }).catch(function (err) {\n        // todo: add error handler\n        console.error(err);\n      }), this._getAccounts().then(function (accounts) {\n        if (!(_this2._accounts.length === accounts.length && accounts.every(function (v) {\n          return accounts.includes(v);\n        }))) {\n          _this2._accounts = accounts;\n          _this2._onAccountsChanged();\n        }\n      }).catch(function (err) {\n        // todo: add error handler\n        // eslint-disable-next-line no-console\n        console.error(err);\n      })]).then(function () {\n        return _this2._eventEmitter.emit('connect', {\n          chainId: _this2._chainId\n        });\n      }).catch(function (err) {\n        // todo: add error handler\n        // eslint-disable-next-line no-console\n        console.error(err);\n      });\n    }\n    // todo this must be ProvideRpcError with a message too\n  }, {\n    key: \"_onDisconnect\",\n    value: function _onDisconnect(code, data) {\n      this._eventEmitter.emit('disconnect', new EIP1193ProviderRpcError(code, data));\n    }\n  }, {\n    key: \"_onAccountsChanged\",\n    value: function _onAccountsChanged() {\n      // get chainId and safe to local\n      this._eventEmitter.emit('accountsChanged', this._accounts);\n    }\n  }]);\n  return Eip1193Provider;\n}(Web3BaseProvider);","map":{"version":3,"names":["Web3BaseProvider","EventEmitter","EIP1193ProviderRpcError","toPayload","Eip1193Provider","_Web3BaseProvider","_inherits","_super","_createSuper","_this","_classCallCheck","_eventEmitter","_chainId","_accounts","_createClass","key","value","_getChainId","request","method","params","data","_context","sent","abrupt","_a","result","stop","_callee","_getAccounts","_context2","_callee2","_onConnect","_this2","Promise","all","then","chainId","emit","catch","err","console","error","accounts","length","every","v","includes","_onAccountsChanged","_onDisconnect","code"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-utils\\src\\web3_eip1193_provider.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport {\n\tEthExecutionAPI,\n\tHexString,\n\tProviderConnectInfo,\n\tWeb3APIMethod,\n\tWeb3APIPayload,\n\tWeb3APISpec,\n\tWeb3BaseProvider,\n} from 'web3-types';\nimport { EventEmitter } from 'events';\nimport { EIP1193ProviderRpcError } from 'web3-errors';\nimport { toPayload } from './json_rpc.js';\n\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */\nexport abstract class Eip1193Provider<\n\tAPI extends Web3APISpec = EthExecutionAPI,\n> extends Web3BaseProvider<API> {\n\tprotected readonly _eventEmitter: EventEmitter = new EventEmitter();\n\tprivate _chainId: HexString = '';\n\tprivate _accounts: HexString[] = [];\n\n\tprivate async _getChainId(): Promise<HexString> {\n\t\tconst data = await (this as Web3BaseProvider<API>).request<\n\t\t\tWeb3APIMethod<API>,\n\t\t\tResponseType\n\t\t>(\n\t\t\ttoPayload({\n\t\t\t\tmethod: 'eth_chainId',\n\t\t\t\tparams: [],\n\t\t\t}) as Web3APIPayload<API, Web3APIMethod<API>>,\n\t\t);\n\t\treturn data?.result ?? '';\n\t}\n\n\tprivate async _getAccounts(): Promise<HexString[]> {\n\t\tconst data = await (this as Web3BaseProvider<API>).request<Web3APIMethod<API>, HexString[]>(\n\t\t\ttoPayload({\n\t\t\t\tmethod: 'eth_accounts',\n\t\t\t\tparams: [],\n\t\t\t}) as Web3APIPayload<API, Web3APIMethod<API>>,\n\t\t);\n\t\treturn data?.result ?? [];\n\t}\n\n\tprotected _onConnect() {\n\t\tPromise.all([\n\t\t\tthis._getChainId()\n\t\t\t\t.then(chainId => {\n\t\t\t\t\tif (chainId !== this._chainId) {\n\t\t\t\t\t\tthis._chainId = chainId;\n\t\t\t\t\t\tthis._eventEmitter.emit('chainChanged', this._chainId);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\t// todo: add error handler\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}),\n\n\t\t\tthis._getAccounts()\n\t\t\t\t.then(accounts => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tthis._accounts.length === accounts.length &&\n\t\t\t\t\t\t\taccounts.every(v => accounts.includes(v))\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._accounts = accounts;\n\t\t\t\t\t\tthis._onAccountsChanged();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\t// todo: add error handler\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}),\n\t\t])\n\t\t\t.then(() =>\n\t\t\t\tthis._eventEmitter.emit('connect', {\n\t\t\t\t\tchainId: this._chainId,\n\t\t\t\t} as ProviderConnectInfo),\n\t\t\t)\n\t\t\t.catch(err => {\n\t\t\t\t// todo: add error handler\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}\n\n\t// todo this must be ProvideRpcError with a message too\n\tprotected _onDisconnect(code: number, data?: unknown) {\n\t\tthis._eventEmitter.emit('disconnect', new EIP1193ProviderRpcError(code, data));\n\t}\n\n\tprivate _onAccountsChanged() {\n\t\t// get chainId and safe to local\n\t\tthis._eventEmitter.emit('accountsChanged', this._accounts);\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}