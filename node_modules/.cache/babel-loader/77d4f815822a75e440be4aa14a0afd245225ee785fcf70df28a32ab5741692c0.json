{"ast":null,"code":"import _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { InvalidResponseError } from 'web3-errors';\nexport var ChunkResponseParser = /*#__PURE__*/function () {\n  function ChunkResponseParser(eventEmitter, autoReconnect) {\n    _classCallCheck(this, ChunkResponseParser);\n    this.eventEmitter = eventEmitter;\n    this.autoReconnect = autoReconnect;\n  }\n  _createClass(ChunkResponseParser, [{\n    key: \"clearQueues\",\n    value: function clearQueues() {\n      if (typeof this._clearQueues === 'function') {\n        this._clearQueues();\n      }\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(clearQueues) {\n      this._clearQueues = clearQueues;\n    }\n  }, {\n    key: \"parseResponse\",\n    value: function parseResponse(data) {\n      var _this = this;\n      var returnValues = [];\n      // DE-CHUNKER\n      var dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n      .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n      .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n      .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n      .split('|--|');\n      dechunkedData.forEach(function (_chunkData) {\n        // prepend the last chunk\n        var chunkData = _chunkData;\n        if (_this.lastChunk) {\n          chunkData = _this.lastChunk + chunkData;\n        }\n        var result;\n        try {\n          result = JSON.parse(chunkData);\n        } catch (e) {\n          _this.lastChunk = chunkData;\n          // start timeout to cancel all requests\n          if (_this.lastChunkTimeout) {\n            clearTimeout(_this.lastChunkTimeout);\n          }\n          _this.lastChunkTimeout = setTimeout(function () {\n            if (_this.autoReconnect) return;\n            _this.clearQueues();\n            _this.eventEmitter.emit('error', new InvalidResponseError({\n              id: 1,\n              jsonrpc: '2.0',\n              error: {\n                code: 2,\n                message: 'Chunk timeout'\n              }\n            }));\n          }, 1000 * 15);\n          return;\n        }\n        // cancel timeout and set chunk to null\n        clearTimeout(_this.lastChunkTimeout);\n        _this.lastChunk = undefined;\n        if (result) returnValues.push(result);\n      });\n      return returnValues;\n    }\n  }]);\n  return ChunkResponseParser;\n}();","map":{"version":3,"names":["InvalidResponseError","ChunkResponseParser","eventEmitter","autoReconnect","_classCallCheck","_createClass","key","value","clearQueues","_clearQueues","onError","parseResponse","data","_this","returnValues","dechunkedData","replace","split","forEach","_chunkData","chunkData","lastChunk","result","JSON","parse","e","lastChunkTimeout","clearTimeout","setTimeout","emit","id","jsonrpc","error","code","message","undefined","push"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-utils\\src\\chunk_response_parser.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { JsonRpcResponse } from 'web3-types';\nimport { InvalidResponseError } from 'web3-errors';\nimport { EventEmitter } from 'events';\n\nexport class ChunkResponseParser {\n\tprivate lastChunk: string | undefined;\n\tprivate lastChunkTimeout: NodeJS.Timeout | undefined;\n\tprivate _clearQueues: (() => void) | undefined;\n\tprivate readonly eventEmitter: EventEmitter;\n\tprivate readonly autoReconnect: boolean;\n\n\tpublic constructor(eventEmitter: EventEmitter, autoReconnect: boolean) {\n\t\tthis.eventEmitter = eventEmitter;\n\t\tthis.autoReconnect = autoReconnect;\n\t}\n\tprivate clearQueues(): void {\n\t\tif (typeof this._clearQueues === 'function') {\n\t\t\tthis._clearQueues();\n\t\t}\n\t}\n\n\tpublic onError(clearQueues?: () => void) {\n\t\tthis._clearQueues = clearQueues;\n\t}\n\n\tpublic parseResponse(data: string): JsonRpcResponse[] {\n\t\tconst returnValues: JsonRpcResponse[] = [];\n\n\t\t// DE-CHUNKER\n\t\tconst dechunkedData = data\n\t\t\t.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n\t\t\t.replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n\t\t\t.replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n\t\t\t.replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n\t\t\t.split('|--|');\n\n\t\tdechunkedData.forEach(_chunkData => {\n\t\t\t// prepend the last chunk\n\t\t\tlet chunkData = _chunkData;\n\t\t\tif (this.lastChunk) {\n\t\t\t\tchunkData = this.lastChunk + chunkData;\n\t\t\t}\n\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tresult = JSON.parse(chunkData) as unknown as JsonRpcResponse;\n\t\t\t} catch (e) {\n\t\t\t\tthis.lastChunk = chunkData;\n\n\t\t\t\t// start timeout to cancel all requests\n\t\t\t\tif (this.lastChunkTimeout) {\n\t\t\t\t\tclearTimeout(this.lastChunkTimeout);\n\t\t\t\t}\n\n\t\t\t\tthis.lastChunkTimeout = setTimeout(() => {\n\t\t\t\t\tif (this.autoReconnect) return;\n\t\t\t\t\tthis.clearQueues();\n\t\t\t\t\tthis.eventEmitter.emit(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\tnew InvalidResponseError({\n\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\t\t\terror: { code: 2, message: 'Chunk timeout' },\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}, 1000 * 15);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// cancel timeout and set chunk to null\n\t\t\tclearTimeout(this.lastChunkTimeout);\n\t\t\tthis.lastChunk = undefined;\n\n\t\t\tif (result) returnValues.push(result);\n\t\t});\n\n\t\treturn returnValues;\n\t}\n}\n"],"mappings":";;AAiBA,SAASA,oBAAoB,QAAQ,aAAa;AAGlD,WAAaC,mBAAmB;EAO/B,SAAAA,oBAAmBC,YAA0B,EAAEC,aAAsB;IAAAC,eAAA,OAAAH,mBAAA;IACpE,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,aAAa,GAAGA,aAAa;EACnC;EAACE,YAAA,CAAAJ,mBAAA;IAAAK,GAAA;IAAAC,KAAA,EACO,SAAAC,YAAA,EAAW;MAClB,IAAI,OAAO,IAAI,CAACC,YAAY,KAAK,UAAU,EAAE;QAC5C,IAAI,CAACA,YAAY,EAAE;;IAErB;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAEM,SAAAG,QAAQF,WAAwB;MACtC,IAAI,CAACC,YAAY,GAAGD,WAAW;IAChC;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAEM,SAAAI,cAAcC,IAAY;MAAA,IAAAC,KAAA;MAChC,IAAMC,YAAY,GAAsB,EAAE;MAE1C;MACA,IAAMC,aAAa,GAAGH,IAAI,CACxBI,OAAO,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;MAAA,CAClCA,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;MAAA,CACxCA,OAAO,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;MAAA,CACrCA,OAAO,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;MAAA,CACrCC,KAAK,CAAC,MAAM,CAAC;MAEfF,aAAa,CAACG,OAAO,CAAC,UAAAC,UAAU,EAAG;QAClC;QACA,IAAIC,SAAS,GAAGD,UAAU;QAC1B,IAAIN,KAAI,CAACQ,SAAS,EAAE;UACnBD,SAAS,GAAGP,KAAI,CAACQ,SAAS,GAAGD,SAAS;;QAGvC,IAAIE,MAAM;QAEV,IAAI;UACHA,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACJ,SAAS,CAA+B;SAC5D,CAAC,OAAOK,CAAC,EAAE;UACXZ,KAAI,CAACQ,SAAS,GAAGD,SAAS;UAE1B;UACA,IAAIP,KAAI,CAACa,gBAAgB,EAAE;YAC1BC,YAAY,CAACd,KAAI,CAACa,gBAAgB,CAAC;;UAGpCb,KAAI,CAACa,gBAAgB,GAAGE,UAAU,CAAC,YAAK;YACvC,IAAIf,KAAI,CAACV,aAAa,EAAE;YACxBU,KAAI,CAACL,WAAW,EAAE;YAClBK,KAAI,CAACX,YAAY,CAAC2B,IAAI,CACrB,OAAO,EACP,IAAI7B,oBAAoB,CAAC;cACxB8B,EAAE,EAAE,CAAC;cACLC,OAAO,EAAE,KAAK;cACdC,KAAK,EAAE;gBAAEC,IAAI,EAAE,CAAC;gBAAEC,OAAO,EAAE;cAAe;aAC1C,CAAC,CACF;UACF,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC;UACb;;QAGD;QACAP,YAAY,CAACd,KAAI,CAACa,gBAAgB,CAAC;QACnCb,KAAI,CAACQ,SAAS,GAAGc,SAAS;QAE1B,IAAIb,MAAM,EAAER,YAAY,CAACsB,IAAI,CAACd,MAAM,CAAC;MACtC,CAAC,CAAC;MAEF,OAAOR,YAAY;IACpB;EAAC;EAAA,OAAAb,mBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}