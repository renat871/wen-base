{"ast":null,"code":"import _toConsumableArray from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _construct from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _possibleConstructorReturn from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _inherits from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { isNullish } from 'web3-utils';\nimport { ExistingPluginNamespaceError } from 'web3-errors';\nimport { isSupportedProvider } from './utils.js';\n// eslint-disable-next-line import/no-cycle\nimport { Web3Config, Web3ConfigEvent } from './web3_config.js';\nimport { Web3RequestManager } from './web3_request_manager.js';\nimport { Web3SubscriptionManager } from './web3_subscription_manager.js';\nimport { Web3BatchRequest } from './web3_batch_request.js';\nexport var Web3Context = /*#__PURE__*/function (_Web3Config) {\n  _inherits(Web3Context, _Web3Config);\n  var _super = _createSuper(Web3Context);\n  function Web3Context(providerOrContext) {\n    var _this;\n    _classCallCheck(this, Web3Context);\n    var _a;\n    _this = _super.call(this);\n    _this.providers = Web3RequestManager.providers;\n    // If \"providerOrContext\" is provided as \"string\" or an objects matching \"SupportedProviders\" interface\n    if (isNullish(providerOrContext) || typeof providerOrContext === 'string' && providerOrContext.trim() !== '' || isSupportedProvider(providerOrContext)) {\n      _this._requestManager = new Web3RequestManager(providerOrContext);\n      _this._subscriptionManager = new Web3SubscriptionManager(_this._requestManager, {});\n      return _possibleConstructorReturn(_this);\n    }\n    var config = providerOrContext.config,\n      provider = providerOrContext.provider,\n      requestManager = providerOrContext.requestManager,\n      subscriptionManager = providerOrContext.subscriptionManager,\n      registeredSubscriptions = providerOrContext.registeredSubscriptions,\n      accountProvider = providerOrContext.accountProvider,\n      wallet = providerOrContext.wallet;\n    _this.setConfig(config !== null && config !== void 0 ? config : {});\n    _this._requestManager = requestManager !== null && requestManager !== void 0 ? requestManager : new Web3RequestManager(provider, (_a = config === null || config === void 0 ? void 0 : config.enableExperimentalFeatures) === null || _a === void 0 ? void 0 : _a.useSubscriptionWhenCheckingBlockTimeout);\n    if (subscriptionManager) {\n      _this._subscriptionManager = subscriptionManager;\n    } else {\n      _this._subscriptionManager = new Web3SubscriptionManager(_this.requestManager, registeredSubscriptions !== null && registeredSubscriptions !== void 0 ? registeredSubscriptions : {});\n    }\n    if (accountProvider) {\n      _this._accountProvider = accountProvider;\n    }\n    if (wallet) {\n      _this._wallet = wallet;\n    }\n    return _this;\n  }\n  _createClass(Web3Context, [{\n    key: \"requestManager\",\n    get: function get() {\n      return this._requestManager;\n    }\n    /**\n     * Will return the current subscriptionManager ({@link Web3SubscriptionManager})\n     */\n  }, {\n    key: \"subscriptionManager\",\n    get: function get() {\n      return this._subscriptionManager;\n    }\n  }, {\n    key: \"wallet\",\n    get: function get() {\n      return this._wallet;\n    }\n  }, {\n    key: \"accountProvider\",\n    get: function get() {\n      return this._accountProvider;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }, {\n    key: \"getContextObject\",\n    value: function getContextObject() {\n      var _a;\n      return {\n        config: this.config,\n        provider: this.provider,\n        requestManager: this.requestManager,\n        subscriptionManager: this.subscriptionManager,\n        registeredSubscriptions: (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.registeredSubscriptions,\n        providers: this.providers,\n        wallet: this.wallet,\n        accountProvider: this.accountProvider\n      };\n    }\n    /**\n     * Use to create new object of any type extended by `Web3Context`\n     * and link it to current context. This can be used to initiate a global context object\n     * and then use it to create new objects of any type extended by `Web3Context`.\n     */\n  }, {\n    key: \"use\",\n    value: function use(ContextRef) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      var newContextChild = _construct(ContextRef, [].concat(args, [this.getContextObject()]));\n      this.on(Web3ConfigEvent.CONFIG_CHANGE, function (event) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        newContextChild.setConfig(_defineProperty({}, event.name, event.newValue));\n      });\n      return newContextChild;\n    }\n    /**\n     * Link current context to another context.\n     */\n  }, {\n    key: \"link\",\n    value: function link(parentContext) {\n      var _this2 = this;\n      this.setConfig(parentContext.config);\n      this._requestManager = parentContext.requestManager;\n      this.provider = parentContext.provider;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      this._subscriptionManager = parentContext.subscriptionManager;\n      this._wallet = parentContext.wallet;\n      this._accountProvider = parentContext._accountProvider;\n      parentContext.on(Web3ConfigEvent.CONFIG_CHANGE, function (event) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        _this2.setConfig(_defineProperty({}, event.name, event.newValue));\n      });\n    }\n    // eslint-disable-next-line no-use-before-define\n  }, {\n    key: \"registerPlugin\",\n    value: function registerPlugin(plugin) {\n      // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n      if (this[plugin.pluginNamespace] !== undefined) throw new ExistingPluginNamespaceError(plugin.pluginNamespace);\n      var _pluginObject = _defineProperty({}, plugin.pluginNamespace, plugin);\n      _pluginObject[plugin.pluginNamespace].link(this);\n      Object.assign(this, _pluginObject);\n    }\n    /**\n     * Will return the current provider.\n     *\n     * @returns Returns the current provider\n     * @example\n     * ```ts\n     * const web3 = new Web3Context(\"http://localhost:8545\");\n     * console.log(web3.provider);\n     * > HttpProvider {\n     * \tclientUrl: 'http://localhost:8545',\n     * \thttpProviderOptions: undefined\n     *  }\n     * ```\n     */\n  }, {\n    key: \"provider\",\n    get: function get() {\n      return this.currentProvider;\n    }\n    /**\n     * Will set the current provider.\n     *\n     * @param provider - The provider to set\n     *\n     * Accepted providers are of type {@link SupportedProviders}\n     * @example\n     * ```ts\n     *  const web3Context = new web3ContextContext(\"http://localhost:8545\");\n     * web3Context.provider = \"ws://localhost:8545\";\n     * console.log(web3Context.provider);\n     * > WebSocketProvider {\n     * _eventEmitter: EventEmitter {\n     * _events: [Object: null prototype] {},\n     * _eventsCount: 0,\n     * ...\n     * }\n     * ```\n     */,\n    set: function set(provider) {\n      this.requestManager.setProvider(provider);\n    }\n    /**\n     * Will return the current provider. (The same as `provider`)\n     *\n     * @returns Returns the current provider\n     * @example\n     * ```ts\n     * const web3Context = new Web3Context(\"http://localhost:8545\");\n     * console.log(web3Context.provider);\n     * > HttpProvider {\n     * \tclientUrl: 'http://localhost:8545',\n     * \thttpProviderOptions: undefined\n     *  }\n     * ```\n     */\n  }, {\n    key: \"currentProvider\",\n    get: function get() {\n      return this.requestManager.provider;\n    }\n    /**\n     * Will set the current provider. (The same as `provider`)\n     *\n     * @param provider - {@link SupportedProviders} The provider to set\n     *\n     * @example\n     * ```ts\n     *  const web3Context = new Web3Context(\"http://localhost:8545\");\n     * web3Context.currentProvider = \"ws://localhost:8545\";\n     * console.log(web3Context.provider);\n     * > WebSocketProvider {\n     * _eventEmitter: EventEmitter {\n     * _events: [Object: null prototype] {},\n     * _eventsCount: 0,\n     * ...\n     * }\n     * ```\n     */,\n    set: function set(provider) {\n      this.requestManager.setProvider(provider);\n    }\n    /**\n     * Will return the givenProvider if available.\n     *\n     * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser. Will return the given provider by the (browser) environment, otherwise `undefined`.\n     */\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"givenProvider\",\n    get: function get() {\n      return Web3Context.givenProvider;\n    }\n    /**\n     * Will set the provider.\n     *\n     * @param provider - {@link SupportedProviders} The provider to set\n     * @returns Returns true if the provider was set\n     */\n  }, {\n    key: \"setProvider\",\n    value: function setProvider(provider) {\n      this.provider = provider;\n      return true;\n    }\n    /**\n     * Will return the {@link Web3BatchRequest} constructor.\n     */\n  }, {\n    key: \"BatchRequest\",\n    get: function get() {\n      return Web3BatchRequest.bind(undefined, this._requestManager);\n    }\n    /**\n     * This method allows extending the web3 modules.\n     * Note: This method is only for backward compatibility, and It is recommended to use Web3 v4 Plugin feature for extending web3.js functionality if you are developing some thing new.\n     */\n  }, {\n    key: \"extend\",\n    value: function extend(extendObj) {\n      var _this3 = this;\n      var _a;\n      // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n      if (extendObj.property && !this[extendObj.property])\n        // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n        this[extendObj.property] = {};\n      (_a = extendObj.methods) === null || _a === void 0 ? void 0 : _a.forEach(function (element) {\n        var method = function method() {\n          for (var _len2 = arguments.length, givenParams = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            givenParams[_key2] = arguments[_key2];\n          }\n          return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", this.requestManager.send({\n                    method: element.call,\n                    params: givenParams\n                  }));\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee, this);\n          }));\n        };\n        if (extendObj.property)\n          // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          _this3[extendObj.property][element.name] = method;\n          // @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n        else _this3[element.name] = method;\n      });\n      return this;\n    }\n  }], [{\n    key: \"fromContextObject\",\n    value: function fromContextObject() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return _construct(this, _toConsumableArray(args.reverse()));\n    }\n  }]);\n  return Web3Context;\n}(Web3Config);\nWeb3Context.providers = Web3RequestManager.providers;\n/**\n * Extend this class when creating a plugin that either doesn't require {@link EthExecutionAPI},\n * or interacts with a RPC node that doesn't fully implement {@link EthExecutionAPI}.\n *\n * To add type support for RPC methods to the {@link Web3RequestManager},\n * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:\n *\n * @example\n * ```ts\n * type CustomRpcApi = {\n *\tcustom_rpc_method: () => string;\n *\tcustom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;\n * };\n *\n * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}\n * ```\n */\nexport var Web3PluginBase = /*#__PURE__*/function (_Web3Context) {\n  _inherits(Web3PluginBase, _Web3Context);\n  var _super2 = _createSuper(Web3PluginBase);\n  function Web3PluginBase() {\n    _classCallCheck(this, Web3PluginBase);\n    return _super2.apply(this, arguments);\n  }\n  return _createClass(Web3PluginBase);\n}(Web3Context);\n/**\n * Extend this class when creating a plugin that makes use of {@link EthExecutionAPI},\n * or depends on other Web3 packages (such as `web3-eth-contract`) that depend on {@link EthExecutionAPI}.\n *\n * To add type support for RPC methods to the {@link Web3RequestManager} (in addition to {@link EthExecutionAPI}),\n * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:\n *\n * @example\n * ```ts\n * type CustomRpcApi = {\n *\tcustom_rpc_method: () => string;\n *\tcustom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;\n * };\n *\n * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}\n * ```\n */\nexport var Web3EthPluginBase = /*#__PURE__*/function (_Web3PluginBase) {\n  _inherits(Web3EthPluginBase, _Web3PluginBase);\n  var _super3 = _createSuper(Web3EthPluginBase);\n  function Web3EthPluginBase() {\n    _classCallCheck(this, Web3EthPluginBase);\n    return _super3.apply(this, arguments);\n  }\n  return _createClass(Web3EthPluginBase);\n}(Web3PluginBase);","map":{"version":3,"names":["isNullish","ExistingPluginNamespaceError","isSupportedProvider","Web3Config","Web3ConfigEvent","Web3RequestManager","Web3SubscriptionManager","Web3BatchRequest","Web3Context","_Web3Config","_inherits","_super","_createSuper","providerOrContext","_this","_classCallCheck","call","providers","trim","_requestManager","_subscriptionManager","_possibleConstructorReturn","config","provider","requestManager","subscriptionManager","registeredSubscriptions","accountProvider","wallet","setConfig","_a","enableExperimentalFeatures","useSubscriptionWhenCheckingBlockTimeout","_accountProvider","_wallet","_createClass","key","get","value","getContextObject","use","ContextRef","_len","arguments","length","args","Array","_key","newContextChild","_construct","concat","on","CONFIG_CHANGE","event","_defineProperty","name","newValue","link","parentContext","_this2","registerPlugin","plugin","pluginNamespace","undefined","_pluginObject","Object","assign","currentProvider","set","setProvider","givenProvider","bind","extend","extendObj","_this3","property","methods","forEach","element","method","_len2","givenParams","_key2","__awaiter","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","send","params","stop","fromContextObject","_len3","_key3","_toConsumableArray","reverse","Web3PluginBase","_Web3Context","_super2","apply","Web3EthPluginBase","_Web3PluginBase","_super3"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-core\\src\\web3_context.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tWeb3APISpec,\n\tWeb3BaseWallet,\n\tWeb3BaseWalletAccount,\n\tWeb3AccountProvider,\n\tSupportedProviders,\n\tHexString,\n\tEthExecutionAPI,\n\tWeb3BaseProvider,\n\tTransaction,\n} from 'web3-types';\nimport { isNullish } from 'web3-utils';\nimport { ExistingPluginNamespaceError } from 'web3-errors';\n\nimport { isSupportedProvider } from './utils.js';\n// eslint-disable-next-line import/no-cycle\nimport { Web3Config, Web3ConfigEvent, Web3ConfigOptions } from './web3_config.js';\nimport { Web3RequestManager } from './web3_request_manager.js';\nimport { Web3SubscriptionConstructor } from './web3_subscriptions.js';\nimport { Web3SubscriptionManager } from './web3_subscription_manager.js';\nimport { Web3BatchRequest } from './web3_batch_request.js';\nimport { ExtensionObject } from './types.js';\n\n// To avoid circular dependencies, we need to export type from here.\nexport type Web3ContextObject<\n\tAPI extends Web3APISpec = unknown,\n\tRegisteredSubs extends {\n\t\t[key: string]: Web3SubscriptionConstructor<API>;\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t} = any,\n> = {\n\tconfig: Web3ConfigOptions;\n\tprovider?: SupportedProviders<API> | string;\n\trequestManager: Web3RequestManager<API>;\n\tsubscriptionManager?: Web3SubscriptionManager<API, RegisteredSubs> | undefined;\n\tregisteredSubscriptions?: RegisteredSubs;\n\tproviders: typeof Web3RequestManager.providers;\n\taccountProvider?: Web3AccountProvider<Web3BaseWalletAccount>;\n\twallet?: Web3BaseWallet<Web3BaseWalletAccount>;\n};\n\nexport type Web3ContextInitOptions<\n\tAPI extends Web3APISpec = unknown,\n\tRegisteredSubs extends {\n\t\t[key: string]: Web3SubscriptionConstructor<API>;\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t} = any,\n> = {\n\tconfig?: Partial<Web3ConfigOptions>;\n\tprovider?: SupportedProviders<API> | string;\n\trequestManager?: Web3RequestManager<API>;\n\tsubscriptionManager?: Web3SubscriptionManager<API, RegisteredSubs> | undefined;\n\tregisteredSubscriptions?: RegisteredSubs;\n\taccountProvider?: Web3AccountProvider<Web3BaseWalletAccount>;\n\twallet?: Web3BaseWallet<Web3BaseWalletAccount>;\n};\n\n// eslint-disable-next-line no-use-before-define\nexport type Web3ContextConstructor<T extends Web3Context, T2 extends unknown[]> = new (\n\t...args: [...extras: T2, context: Web3ContextObject]\n) => T;\n\n// To avoid circular dependencies, we need to export type from here.\nexport type Web3ContextFactory<\n\t// eslint-disable-next-line no-use-before-define\n\tT extends Web3Context,\n\tT2 extends unknown[],\n> = Web3ContextConstructor<T, T2> & {\n\tfromContextObject(this: Web3ContextConstructor<T, T2>, contextObject: Web3ContextObject): T;\n};\n\nexport class Web3Context<\n\tAPI extends Web3APISpec = unknown,\n\tRegisteredSubs extends {\n\t\t[key: string]: Web3SubscriptionConstructor<API>;\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t} = any,\n> extends Web3Config {\n\tpublic static readonly providers = Web3RequestManager.providers;\n\tpublic static givenProvider?: SupportedProviders<never>;\n\tpublic readonly providers = Web3RequestManager.providers;\n\tprotected _requestManager: Web3RequestManager<API>;\n\tprotected _subscriptionManager: Web3SubscriptionManager<API, RegisteredSubs>;\n\tprotected _accountProvider?: Web3AccountProvider<Web3BaseWalletAccount>;\n\tprotected _wallet?: Web3BaseWallet<Web3BaseWalletAccount>;\n\n\tpublic constructor(\n\t\tproviderOrContext?:\n\t\t\t| string\n\t\t\t| SupportedProviders<API>\n\t\t\t| Web3ContextInitOptions<API, RegisteredSubs>,\n\t) {\n\t\tsuper();\n\n\t\t// If \"providerOrContext\" is provided as \"string\" or an objects matching \"SupportedProviders\" interface\n\t\tif (\n\t\t\tisNullish(providerOrContext) ||\n\t\t\t(typeof providerOrContext === 'string' && providerOrContext.trim() !== '') ||\n\t\t\tisSupportedProvider(providerOrContext as SupportedProviders<API>)\n\t\t) {\n\t\t\tthis._requestManager = new Web3RequestManager<API>(\n\t\t\t\tproviderOrContext as undefined | string | SupportedProviders<API>,\n\t\t\t);\n\t\t\tthis._subscriptionManager = new Web3SubscriptionManager(\n\t\t\t\tthis._requestManager,\n\t\t\t\t{} as RegisteredSubs,\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tconfig,\n\t\t\tprovider,\n\t\t\trequestManager,\n\t\t\tsubscriptionManager,\n\t\t\tregisteredSubscriptions,\n\t\t\taccountProvider,\n\t\t\twallet,\n\t\t} = providerOrContext as Web3ContextInitOptions<API, RegisteredSubs>;\n\n\t\tthis.setConfig(config ?? {});\n\n\t\tthis._requestManager =\n\t\t\trequestManager ??\n\t\t\tnew Web3RequestManager<API>(\n\t\t\t\tprovider,\n\t\t\t\tconfig?.enableExperimentalFeatures?.useSubscriptionWhenCheckingBlockTimeout,\n\t\t\t);\n\n\t\tif (subscriptionManager) {\n\t\t\tthis._subscriptionManager = subscriptionManager;\n\t\t} else {\n\t\t\tthis._subscriptionManager = new Web3SubscriptionManager(\n\t\t\t\tthis.requestManager,\n\t\t\t\tregisteredSubscriptions ?? ({} as RegisteredSubs),\n\t\t\t);\n\t\t}\n\n\t\tif (accountProvider) {\n\t\t\tthis._accountProvider = accountProvider;\n\t\t}\n\n\t\tif (wallet) {\n\t\t\tthis._wallet = wallet;\n\t\t}\n\t}\n\n\tpublic get requestManager() {\n\t\treturn this._requestManager;\n\t}\n\n\t/**\n\t * Will return the current subscriptionManager ({@link Web3SubscriptionManager})\n\t */\n\tpublic get subscriptionManager() {\n\t\treturn this._subscriptionManager;\n\t}\n\n\tpublic get wallet() {\n\t\treturn this._wallet;\n\t}\n\n\tpublic get accountProvider() {\n\t\treturn this._accountProvider;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tpublic static fromContextObject<T extends Web3Context, T3 extends unknown[]>(\n\t\tthis: Web3ContextConstructor<T, T3>,\n\t\t...args: [Web3ContextObject, ...T3]\n\t) {\n\t\treturn new this(...(args.reverse() as [...T3, Web3ContextObject]));\n\t}\n\n\tpublic getContextObject(): Web3ContextObject<API, RegisteredSubs> {\n\t\treturn {\n\t\t\tconfig: this.config,\n\t\t\tprovider: this.provider,\n\t\t\trequestManager: this.requestManager,\n\t\t\tsubscriptionManager: this.subscriptionManager,\n\t\t\tregisteredSubscriptions: this.subscriptionManager?.registeredSubscriptions,\n\t\t\tproviders: this.providers,\n\t\t\twallet: this.wallet,\n\t\t\taccountProvider: this.accountProvider,\n\t\t};\n\t}\n\n\t/**\n\t * Use to create new object of any type extended by `Web3Context`\n\t * and link it to current context. This can be used to initiate a global context object\n\t * and then use it to create new objects of any type extended by `Web3Context`.\n\t */\n\tpublic use<T extends Web3Context, T2 extends unknown[]>(\n\t\tContextRef: Web3ContextConstructor<T, T2>,\n\t\t...args: [...T2]\n\t) {\n\t\tconst newContextChild: T = new ContextRef(\n\t\t\t...([...args, this.getContextObject()] as unknown as [...T2, Web3ContextObject]),\n\t\t);\n\n\t\tthis.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tnewContextChild.setConfig({ [event.name]: event.newValue });\n\t\t});\n\n\t\treturn newContextChild;\n\t}\n\n\t/**\n\t * Link current context to another context.\n\t */\n\tpublic link<T extends Web3Context>(parentContext: T) {\n\t\tthis.setConfig(parentContext.config);\n\t\tthis._requestManager = parentContext.requestManager;\n\t\tthis.provider = parentContext.provider;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tthis._subscriptionManager = parentContext.subscriptionManager;\n\t\tthis._wallet = parentContext.wallet;\n\t\tthis._accountProvider = parentContext._accountProvider;\n\n\t\tparentContext.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\tthis.setConfig({ [event.name]: event.newValue });\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-use-before-define\n\tpublic registerPlugin(plugin: Web3PluginBase) {\n\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\tif (this[plugin.pluginNamespace] !== undefined)\n\t\t\tthrow new ExistingPluginNamespaceError(plugin.pluginNamespace);\n\n\t\tconst _pluginObject = {\n\t\t\t[plugin.pluginNamespace]: plugin,\n\t\t};\n\t\t_pluginObject[plugin.pluginNamespace].link(this);\n\t\tObject.assign(this, _pluginObject);\n\t}\n\n\t/**\n\t * Will return the current provider.\n\t *\n\t * @returns Returns the current provider\n\t * @example\n\t * ```ts\n\t * const web3 = new Web3Context(\"http://localhost:8545\");\n\t * console.log(web3.provider);\n\t * > HttpProvider {\n\t * \tclientUrl: 'http://localhost:8545',\n\t * \thttpProviderOptions: undefined\n\t *  }\n\t * ```\n\t */\n\n\tpublic get provider(): Web3BaseProvider<API> | undefined {\n\t\treturn this.currentProvider;\n\t}\n\n\t/**\n\t * Will set the current provider.\n\t *\n\t * @param provider - The provider to set\n\t *\n\t * Accepted providers are of type {@link SupportedProviders}\n\t * @example\n\t * ```ts\n\t *  const web3Context = new web3ContextContext(\"http://localhost:8545\");\n\t * web3Context.provider = \"ws://localhost:8545\";\n\t * console.log(web3Context.provider);\n\t * > WebSocketProvider {\n\t * _eventEmitter: EventEmitter {\n\t * _events: [Object: null prototype] {},\n\t * _eventsCount: 0,\n\t * ...\n\t * }\n\t * ```\n\t */\n\n\tpublic set provider(provider: SupportedProviders<API> | string | undefined) {\n\t\tthis.requestManager.setProvider(provider);\n\t}\n\n\t/**\n\t * Will return the current provider. (The same as `provider`)\n\t *\n\t * @returns Returns the current provider\n\t * @example\n\t * ```ts\n\t * const web3Context = new Web3Context(\"http://localhost:8545\");\n\t * console.log(web3Context.provider);\n\t * > HttpProvider {\n\t * \tclientUrl: 'http://localhost:8545',\n\t * \thttpProviderOptions: undefined\n\t *  }\n\t * ```\n\t */\n\tpublic get currentProvider(): Web3BaseProvider<API> | undefined {\n\t\treturn this.requestManager.provider as Web3BaseProvider<API>;\n\t}\n\n\t/**\n\t * Will set the current provider. (The same as `provider`)\n\t *\n\t * @param provider - {@link SupportedProviders} The provider to set\n\t *\n\t * @example\n\t * ```ts\n\t *  const web3Context = new Web3Context(\"http://localhost:8545\");\n\t * web3Context.currentProvider = \"ws://localhost:8545\";\n\t * console.log(web3Context.provider);\n\t * > WebSocketProvider {\n\t * _eventEmitter: EventEmitter {\n\t * _events: [Object: null prototype] {},\n\t * _eventsCount: 0,\n\t * ...\n\t * }\n\t * ```\n\t */\n\tpublic set currentProvider(provider: SupportedProviders<API> | string | undefined) {\n\t\tthis.requestManager.setProvider(provider);\n\t}\n\n\t/**\n\t * Will return the givenProvider if available.\n\t *\n\t * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser. Will return the given provider by the (browser) environment, otherwise `undefined`.\n\t */\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic get givenProvider() {\n\t\treturn Web3Context.givenProvider;\n\t}\n\t/**\n\t * Will set the provider.\n\t *\n\t * @param provider - {@link SupportedProviders} The provider to set\n\t * @returns Returns true if the provider was set\n\t */\n\tpublic setProvider(provider?: SupportedProviders<API> | string): boolean {\n\t\tthis.provider = provider;\n\t\treturn true;\n\t}\n\t/**\n\t * Will return the {@link Web3BatchRequest} constructor.\n\t */\n\tpublic get BatchRequest(): new () => Web3BatchRequest {\n\t\treturn Web3BatchRequest.bind(\n\t\t\tundefined,\n\t\t\tthis._requestManager as unknown as Web3RequestManager,\n\t\t);\n\t}\n\n\t/**\n\t * This method allows extending the web3 modules.\n\t * Note: This method is only for backward compatibility, and It is recommended to use Web3 v4 Plugin feature for extending web3.js functionality if you are developing some thing new.\n\t */\n\tpublic extend(extendObj: ExtensionObject) {\n\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\tif (extendObj.property && !this[extendObj.property])\n\t\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\t\tthis[extendObj.property] = {};\n\n\t\textendObj.methods?.forEach(element => {\n\t\t\tconst method = async (...givenParams: unknown[]) =>\n\t\t\t\tthis.requestManager.send({\n\t\t\t\t\tmethod: element.call,\n\t\t\t\t\tparams: givenParams,\n\t\t\t\t});\n\n\t\t\tif (extendObj.property)\n\t\t\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tthis[extendObj.property][element.name] = method;\n\t\t\t// @ts-expect-error No index signature with a parameter of type 'string' was found on type 'Web3Context<API, RegisteredSubs>'\n\t\t\telse this[element.name] = method;\n\t\t});\n\t\treturn this;\n\t}\n}\n\n// To avoid cycle dependency declare this type in this file\nexport type TransactionBuilder<API extends Web3APISpec = unknown> = <\n\tReturnType = Transaction,\n>(options: {\n\ttransaction: Transaction;\n\tweb3Context: Web3Context<API>;\n\tprivateKey?: HexString | Uint8Array;\n\tfillGasPrice?: boolean;\n}) => Promise<ReturnType>;\n\n/**\n * Extend this class when creating a plugin that either doesn't require {@link EthExecutionAPI},\n * or interacts with a RPC node that doesn't fully implement {@link EthExecutionAPI}.\n *\n * To add type support for RPC methods to the {@link Web3RequestManager},\n * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:\n *\n * @example\n * ```ts\n * type CustomRpcApi = {\n *\tcustom_rpc_method: () => string;\n *\tcustom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;\n * };\n *\n * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}\n * ```\n */\nexport abstract class Web3PluginBase<\n\tAPI extends Web3APISpec = Web3APISpec,\n> extends Web3Context<API> {\n\tpublic abstract pluginNamespace: string;\n}\n\n/**\n * Extend this class when creating a plugin that makes use of {@link EthExecutionAPI},\n * or depends on other Web3 packages (such as `web3-eth-contract`) that depend on {@link EthExecutionAPI}.\n *\n * To add type support for RPC methods to the {@link Web3RequestManager} (in addition to {@link EthExecutionAPI}),\n * define a {@link Web3APISpec} and pass it as a generic to Web3PluginBase like so:\n *\n * @example\n * ```ts\n * type CustomRpcApi = {\n *\tcustom_rpc_method: () => string;\n *\tcustom_rpc_method_with_parameters: (parameter1: string, parameter2: number) => string;\n * };\n *\n * class CustomPlugin extends Web3PluginBase<CustomRpcApi> {...}\n * ```\n */\nexport abstract class Web3EthPluginBase<API extends Web3APISpec = unknown> extends Web3PluginBase<\n\tAPI & EthExecutionAPI\n> {}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}