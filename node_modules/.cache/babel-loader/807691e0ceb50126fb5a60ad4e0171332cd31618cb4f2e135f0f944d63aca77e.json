{"ast":null,"code":"import _defineProperty from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { Web3Context, Web3ConfigEvent } from 'web3-core';\nimport { ContractExecutionError, ContractTransactionDataAndInputError, SubscriptionError, Web3ContractError } from 'web3-errors';\nimport { createAccessList, call, estimateGas, getLogs, NewHeadsSubscription, sendTransaction } from 'web3-eth';\nimport { encodeEventSignature, encodeFunctionSignature, decodeContractErrorData, isAbiErrorFragment, isAbiEventFragment, isAbiFunctionFragment, jsonInterfaceMethodToString } from 'web3-eth-abi';\nimport { BlockTags, DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { format, isDataFormat, keccak256, toChecksumAddress } from 'web3-utils';\nimport { isNullish, validator, utils as validatorUtils, Web3ValidatorError } from 'web3-validator';\nimport { ALL_EVENTS, ALL_EVENTS_ABI } from './constants.js';\nimport { decodeEventABI, decodeMethodReturn, encodeEventABI, encodeMethodABI } from './encoding.js';\nimport { LogsSubscription } from './log_subscription.js';\nimport { getCreateAccessListParams, getEstimateGasParams, getEthTxCallParams, getSendTxParams, isContractInitOptions, isWeb3ContractContext } from './utils.js';\nvar contractSubscriptions = {\n  logs: LogsSubscription,\n  newHeads: NewHeadsSubscription,\n  newBlockHeaders: NewHeadsSubscription\n};\n/**\n * The class designed to interact with smart contracts on the Ethereum blockchain.\n */\nexport var Contract = /*#__PURE__*/function (_Web3Context) {\n  _inherits(Contract, _Web3Context);\n  var _super = _createSuper(Contract);\n  function Contract(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {\n    var _this;\n    _classCallCheck(this, Contract);\n    var _a, _b, _c;\n    // eslint-disable-next-line no-nested-ternary\n    var options = isContractInitOptions(addressOrOptionsOrContext) ? addressOrOptionsOrContext : isContractInitOptions(optionsOrContextOrReturnFormat) ? optionsOrContextOrReturnFormat : undefined;\n    if (!isNullish(options) && !isNullish(options.data) && !isNullish(options.input)) throw new ContractTransactionDataAndInputError({\n      data: options.data,\n      input: options.input\n    });\n    var contractContext;\n    if (isWeb3ContractContext(addressOrOptionsOrContext)) {\n      contractContext = addressOrOptionsOrContext;\n    } else if (isWeb3ContractContext(optionsOrContextOrReturnFormat)) {\n      contractContext = optionsOrContextOrReturnFormat;\n    } else {\n      contractContext = contextOrReturnFormat;\n    }\n    var provider;\n    if (typeof addressOrOptionsOrContext === 'object' && 'provider' in addressOrOptionsOrContext) {\n      provider = addressOrOptionsOrContext.provider;\n    } else if (typeof optionsOrContextOrReturnFormat === 'object' && 'provider' in optionsOrContextOrReturnFormat) {\n      provider = optionsOrContextOrReturnFormat.provider;\n    } else if (typeof contextOrReturnFormat === 'object' && 'provider' in contextOrReturnFormat) {\n      provider = contextOrReturnFormat.provider;\n    } else {\n      provider = Contract.givenProvider;\n    }\n    _this = _super.call(this, Object.assign(Object.assign({}, contractContext), {\n      provider: provider,\n      registeredSubscriptions: contractSubscriptions\n    }));\n    /**\n     * Set to true if you want contracts' defaults to sync with global defaults.\n     */\n    _this.syncWithContext = false;\n    _this._functions = {};\n    _this._overloadedMethodAbis = new Map();\n    // eslint-disable-next-line no-nested-ternary\n    var returnDataFormat = isDataFormat(contextOrReturnFormat) ? contextOrReturnFormat : isDataFormat(optionsOrContextOrReturnFormat) ? optionsOrContextOrReturnFormat : returnFormat !== null && returnFormat !== void 0 ? returnFormat : DEFAULT_RETURN_FORMAT;\n    var address = typeof addressOrOptionsOrContext === 'string' ? addressOrOptionsOrContext : undefined;\n    _this._parseAndSetJsonInterface(jsonInterface, returnDataFormat);\n    if (!isNullish(address)) {\n      _this._parseAndSetAddress(address, returnDataFormat);\n    }\n    _this.options = {\n      address: address,\n      jsonInterface: _this._jsonInterface,\n      gas: (_a = options === null || options === void 0 ? void 0 : options.gas) !== null && _a !== void 0 ? _a : options === null || options === void 0 ? void 0 : options.gasLimit,\n      gasPrice: options === null || options === void 0 ? void 0 : options.gasPrice,\n      from: options === null || options === void 0 ? void 0 : options.from,\n      input: (_b = options === null || options === void 0 ? void 0 : options.input) !== null && _b !== void 0 ? _b : options === null || options === void 0 ? void 0 : options.data\n    };\n    _this.syncWithContext = (_c = options === null || options === void 0 ? void 0 : options.syncWithContext) !== null && _c !== void 0 ? _c : false;\n    if (contractContext instanceof Web3Context) {\n      _this.subscribeToContextEvents(contractContext);\n    }\n    Object.defineProperty(_this.options, 'address', {\n      set: function set(value) {\n        return _this._parseAndSetAddress(value, returnDataFormat);\n      },\n      get: function get() {\n        return _this._address;\n      }\n    });\n    Object.defineProperty(_this.options, 'jsonInterface', {\n      set: function set(value) {\n        return _this._parseAndSetJsonInterface(value, returnDataFormat);\n      },\n      get: function get() {\n        return _this._jsonInterface;\n      }\n    });\n    return _this;\n  }\n  /**\n   * Subscribe to an event.\n   *\n   * ```ts\n   * await myContract.events.MyEvent([options])\n   * ```\n   *\n   * There is a special event `allEvents` that can be used to subscribe all events.\n   *\n   * ```ts\n   * await myContract.events.allEvents([options])\n   * ```\n   *\n   * @returns - When individual event is accessed will returns {@link ContractBoundEvent} object\n   */\n  _createClass(Contract, [{\n    key: \"events\",\n    get: function get() {\n      return this._events;\n    }\n    /**\n     * Creates a transaction object for that method, which then can be `called`, `send`, `estimated`, `createAccessList` , or `ABI encoded`.\n     *\n     * The methods of this smart contract are available through:\n     *\n     * The name: `myContract.methods.myMethod(123)`\n     * The name with parameters: `myContract.methods['myMethod(uint256)'](123)`\n     * The signature `myContract.methods['0x58cf5f10'](123)`\n     *\n     * This allows calling functions with same name but different parameters from the JavaScript contract object.\n     *\n     * \\> The method signature does not provide a type safe interface, so we recommend to use method `name` instead.\n     *\n     * ```ts\n     * // calling a method\n     * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     *\n     * // or sending and using a promise\n     * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     *\n     * // or sending and using the events\n     * const sendObject = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n     * sendObject.on('transactionHash', function(hash){\n     *   ...\n     * });\n     * sendObject.on('receipt', function(receipt){\n     *   ...\n     * });\n     * sendObject.on('confirmation', function(confirmationNumber, receipt){\n     *   ...\n     * });\n     * sendObject.on('error', function(error, receipt) {\n     *   ...\n     * });\n     * ```\n     *\n     * @returns - Either returns {@link PayableMethodObject} or {@link NonPayableMethodObject} based on the definitions of the {@doclink glossary/json_interface | json interface} of that contract.\n     */\n  }, {\n    key: \"methods\",\n    get: function get() {\n      return this._methods;\n    }\n    /**\n     * Clones the current contract instance. This doesn't deploy contract on blockchain and only creates a local clone.\n     *\n     * @returns - The new contract instance.\n     *\n     * ```ts\n     * const contract1 = new eth.Contract(abi, address, {gasPrice: '12345678', from: fromAddress});\n     *\n     * const contract2 = contract1.clone();\n     * contract2.options.address = address2;\n     *\n     * (contract1.options.address !== contract2.options.address);\n     * > true\n     * ```\n     */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newContract;\n      if (this.options.address) {\n        newContract = new Contract([].concat(_toConsumableArray(this._jsonInterface), _toConsumableArray(this._errorsInterface)), this.options.address, {\n          gas: this.options.gas,\n          gasPrice: this.options.gasPrice,\n          from: this.options.from,\n          input: this.options.input,\n          provider: this.currentProvider,\n          syncWithContext: this.syncWithContext\n        }, this.getContextObject());\n      } else {\n        newContract = new Contract([].concat(_toConsumableArray(this._jsonInterface), _toConsumableArray(this._errorsInterface)), {\n          gas: this.options.gas,\n          gasPrice: this.options.gasPrice,\n          from: this.options.from,\n          input: this.options.input,\n          provider: this.currentProvider,\n          syncWithContext: this.syncWithContext\n        }, this.getContextObject());\n      }\n      if (this.context) newContract.subscribeToContextEvents(this.context);\n      return newContract;\n    }\n    /**\n     * Call this function to deploy the contract to the blockchain. After successful deployment the promise will resolve with a new contract instance.\n     *\n     * ```ts\n     * myContract.deploy({\n     *   input: '0x12345...', // data keyword can be used, too. If input is used, data will be ignored.\n     *   arguments: [123, 'My String']\n     * })\n     * .send({\n     *   from: '0x1234567890123456789012345678901234567891',\n     *   gas: 1500000,\n     *   gasPrice: '30000000000000'\n     * }, function(error, transactionHash){ ... })\n     * .on('error', function(error){ ... })\n     * .on('transactionHash', function(transactionHash){ ... })\n     * .on('receipt', function(receipt){\n     *  console.log(receipt.contractAddress) // contains the new contract address\n     * })\n     * .on('confirmation', function(confirmationNumber, receipt){ ... })\n     * .then(function(newContractInstance){\n     *   console.log(newContractInstance.options.address) // instance with the new contract address\n     * });\n     *\n     *\n     * // When the data is already set as an option to the contract itself\n     * myContract.options.data = '0x12345...';\n     *\n     * myContract.deploy({\n     *   arguments: [123, 'My String']\n     * })\n     * .send({\n     *   from: '0x1234567890123456789012345678901234567891',\n     *   gas: 1500000,\n     *   gasPrice: '30000000000000'\n     * })\n     * .then(function(newContractInstance){\n     *   console.log(newContractInstance.options.address) // instance with the new contract address\n     * });\n     *\n     *\n     * // Simply encoding\n     * myContract.deploy({\n     *   input: '0x12345...',\n     *   arguments: [123, 'My String']\n     * })\n     * .encodeABI();\n     * > '0x12345...0000012345678765432'\n     *\n     *\n     * // Gas estimation\n     * myContract.deploy({\n     *   input: '0x12345...',\n     *   arguments: [123, 'My String']\n     * })\n     * .estimateGas(function(err, gas){\n     *   console.log(gas);\n     * });\n     * ```\n     *\n     * @returns - The transaction object\n     */\n  }, {\n    key: \"deploy\",\n    value: function deploy(deployOptions) {\n      var _this2 = this;\n      var _a, _b, _c;\n      var abi = this._jsonInterface.find(function (j) {\n        return j.type === 'constructor';\n      });\n      if (!abi) {\n        abi = {\n          type: 'constructor',\n          inputs: [],\n          stateMutability: ''\n        };\n      }\n      var _input = format({\n        format: 'bytes'\n      }, (_b = (_a = deployOptions === null || deployOptions === void 0 ? void 0 : deployOptions.input) !== null && _a !== void 0 ? _a : deployOptions === null || deployOptions === void 0 ? void 0 : deployOptions.data) !== null && _b !== void 0 ? _b : this.options.input, DEFAULT_RETURN_FORMAT);\n      if (!_input || _input.trim() === '0x') {\n        throw new Web3ContractError('contract creation without any data provided.');\n      }\n      var args = (_c = deployOptions === null || deployOptions === void 0 ? void 0 : deployOptions.arguments) !== null && _c !== void 0 ? _c : [];\n      var contractOptions = Object.assign(Object.assign({}, this.options), {\n        input: _input\n      });\n      return {\n        arguments: args,\n        send: function send(options) {\n          var modifiedOptions = Object.assign({}, options);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n          return _this2._contractMethodDeploySend(abi, args, modifiedOptions, contractOptions);\n        },\n        estimateGas: function estimateGas(options) {\n          var returnFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RETURN_FORMAT;\n          return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            var modifiedOptions;\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  modifiedOptions = Object.assign({}, options);\n                  return _context.abrupt(\"return\", this._contractMethodEstimateGas({\n                    abi: abi,\n                    params: args,\n                    returnFormat: returnFormat,\n                    options: modifiedOptions,\n                    contractOptions: contractOptions\n                  }));\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee, this);\n          }));\n        },\n        encodeABI: function encodeABI() {\n          return encodeMethodABI(abi, args, format({\n            format: 'bytes'\n          }, _input, DEFAULT_RETURN_FORMAT));\n        }\n      };\n    }\n  }, {\n    key: \"getPastEvents\",\n    value: function getPastEvents(param1, param2, param3) {\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this3 = this;\n        var eventName, options, returnFormat, abi, _encodeEventABI, fromBlock, toBlock, topics, address, logs, decodedLogs, filter, filterKeys;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              eventName = typeof param1 === 'string' ? param1 : 'allEvents';\n              options =\n              // eslint-disable-next-line no-nested-ternary\n              typeof param1 !== 'string' && !isDataFormat(param1) ? param1 : !isDataFormat(param2) ? param2 : {}; // eslint-disable-next-line no-nested-ternary\n              returnFormat = isDataFormat(param1) ? param1 : isDataFormat(param2) ? param2 : param3 !== null && param3 !== void 0 ? param3 : DEFAULT_RETURN_FORMAT;\n              abi = eventName === 'allEvents' || eventName === ALL_EVENTS ? ALL_EVENTS_ABI : this._jsonInterface.find(function (j) {\n                return 'name' in j && j.name === eventName;\n              });\n              if (abi) {\n                _context2.next = 6;\n                break;\n              }\n              throw new Web3ContractError(\"Event \".concat(eventName, \" not found.\"));\n            case 6:\n              _encodeEventABI = encodeEventABI(this.options, abi, options !== null && options !== void 0 ? options : {}), fromBlock = _encodeEventABI.fromBlock, toBlock = _encodeEventABI.toBlock, topics = _encodeEventABI.topics, address = _encodeEventABI.address;\n              _context2.next = 9;\n              return getLogs(this, {\n                fromBlock: fromBlock,\n                toBlock: toBlock,\n                topics: topics,\n                address: address\n              }, returnFormat);\n            case 9:\n              logs = _context2.sent;\n              decodedLogs = logs.map(function (log) {\n                return typeof log === 'string' ? log : decodeEventABI(abi, log, _this3._jsonInterface, returnFormat);\n              });\n              filter = (_a = options === null || options === void 0 ? void 0 : options.filter) !== null && _a !== void 0 ? _a : {};\n              filterKeys = Object.keys(filter);\n              if (!(filterKeys.length > 0)) {\n                _context2.next = 15;\n                break;\n              }\n              return _context2.abrupt(\"return\", decodedLogs.filter(function (log) {\n                if (typeof log === 'string') return true;\n                return filterKeys.every(function (key) {\n                  var _a;\n                  if (Array.isArray(filter[key])) {\n                    return filter[key].some(function (v) {\n                      return String(log.returnValues[key]).toUpperCase() === String(v).toUpperCase();\n                    });\n                  }\n                  var inputAbi = (_a = abi.inputs) === null || _a === void 0 ? void 0 : _a.filter(function (input) {\n                    return input.name === key;\n                  })[0];\n                  if ((inputAbi === null || inputAbi === void 0 ? void 0 : inputAbi.indexed) && inputAbi.type === 'string') {\n                    var hashedIndexedString = keccak256(filter[key]);\n                    if (hashedIndexedString === String(log.returnValues[key])) return true;\n                  }\n                  return String(log.returnValues[key]).toUpperCase() === String(filter[key]).toUpperCase();\n                });\n              }));\n            case 15:\n              return _context2.abrupt(\"return\", decodedLogs);\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"_parseAndSetAddress\",\n    value: function _parseAndSetAddress(value) {\n      var returnFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RETURN_FORMAT;\n      this._address = value ? toChecksumAddress(format({\n        format: 'address'\n      }, value, returnFormat)) : value;\n    }\n  }, {\n    key: \"_parseAndSetJsonInterface\",\n    value: function _parseAndSetJsonInterface(abis) {\n      var returnFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RETURN_FORMAT;\n      var _a, _b, _c, _d, _e;\n      this._functions = {};\n      this._methods = {};\n      this._events = {};\n      var result = [];\n      var functionsAbi = abis.filter(function (abi) {\n        return abi.type !== 'error';\n      });\n      var errorsAbi = abis.filter(function (abi) {\n        return isAbiErrorFragment(abi);\n      });\n      var _iterator = _createForOfIteratorHelper(functionsAbi),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var a = _step.value;\n          var abi = Object.assign(Object.assign({}, a), {\n            signature: ''\n          });\n          if (isAbiFunctionFragment(abi)) {\n            var methodName = jsonInterfaceMethodToString(abi);\n            var methodSignature = encodeFunctionSignature(methodName);\n            abi.signature = methodSignature;\n            // make constant and payable backwards compatible\n            abi.constant = (_b = (_a = abi.stateMutability === 'view') !== null && _a !== void 0 ? _a : abi.stateMutability === 'pure') !== null && _b !== void 0 ? _b : abi.constant;\n            abi.payable = (_c = abi.stateMutability === 'payable') !== null && _c !== void 0 ? _c : abi.payable;\n            this._overloadedMethodAbis.set(abi.name, [].concat(_toConsumableArray((_d = this._overloadedMethodAbis.get(abi.name)) !== null && _d !== void 0 ? _d : []), [abi]));\n            var abiFragment = (_e = this._overloadedMethodAbis.get(abi.name)) !== null && _e !== void 0 ? _e : [];\n            var contractMethod = this._createContractMethod(abiFragment, errorsAbi);\n            this._functions[methodName] = {\n              signature: methodSignature,\n              method: contractMethod\n            };\n            // We don't know a particular type of the Abi method so can't type check\n            this._methods[abi.name] = this._functions[methodName].method;\n            // We don't know a particular type of the Abi method so can't type check\n            this._methods[methodName] = this._functions[methodName].method;\n            // We don't know a particular type of the Abi method so can't type check\n            this._methods[methodSignature] = this._functions[methodName].method;\n          } else if (isAbiEventFragment(abi)) {\n            var eventName = jsonInterfaceMethodToString(abi);\n            var eventSignature = encodeEventSignature(eventName);\n            var event = this._createContractEvent(abi, returnFormat);\n            abi.signature = eventSignature;\n            if (!(eventName in this._events) || abi.name === 'bound') {\n              // It's a private type and we don't want to expose it and no need to check\n              this._events[eventName] = event;\n            }\n            // It's a private type and we don't want to expose it and no need to check\n            this._events[abi.name] = event;\n            // It's a private type and we don't want to expose it and no need to check\n            this._events[eventSignature] = event;\n          }\n          result = [].concat(_toConsumableArray(result), [abi]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._events.allEvents = this._createContractEvent(ALL_EVENTS_ABI, returnFormat);\n      this._jsonInterface = _toConsumableArray(result);\n      this._errorsInterface = errorsAbi;\n    }\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"_getAbiParams\",\n    value: function _getAbiParams(abi, params) {\n      var _a;\n      try {\n        return validatorUtils.transformJsonDataToAbiFormat((_a = abi.inputs) !== null && _a !== void 0 ? _a : [], params);\n      } catch (error) {\n        throw new Web3ContractError(\"Invalid parameters for method \".concat(abi.name, \": \").concat(error.message));\n      }\n    }\n  }, {\n    key: \"_createContractMethod\",\n    value: function _createContractMethod(abiArr, errorsAbis) {\n      var _this4 = this;\n      var abi = abiArr[abiArr.length - 1];\n      return function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n        var _a, _b;\n        var abiParams;\n        var abis = (_a = _this4._overloadedMethodAbis.get(abi.name)) !== null && _a !== void 0 ? _a : [];\n        var methodAbi = abis[0];\n        var internalErrorsAbis = errorsAbis;\n        var arrayOfAbis = abis.filter(function (_abi) {\n          var _a;\n          return ((_a = _abi.inputs) !== null && _a !== void 0 ? _a : []).length === params.length;\n        });\n        if (abis.length === 1 || arrayOfAbis.length === 0) {\n          abiParams = _this4._getAbiParams(methodAbi, params);\n          validator.validate((_b = abi.inputs) !== null && _b !== void 0 ? _b : [], abiParams);\n        } else {\n          var errors = [];\n          var _iterator2 = _createForOfIteratorHelper(arrayOfAbis),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _abi = _step2.value;\n              try {\n                abiParams = _this4._getAbiParams(_abi, params);\n                validator.validate(_abi.inputs, abiParams);\n                methodAbi = _abi;\n                break;\n              } catch (e) {\n                errors.push(e);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          if (errors.length === arrayOfAbis.length) {\n            throw new Web3ValidatorError(errors);\n          }\n        }\n        var methods = {\n          arguments: abiParams,\n          call: function call(options, block) {\n            return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    return _context3.abrupt(\"return\", this._contractMethodCall(methodAbi, abiParams, internalErrorsAbis, options, block));\n                  case 1:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3, this);\n            }));\n          },\n          send: function send(options) {\n            return _this4._contractMethodSend(methodAbi, abiParams, internalErrorsAbis, options);\n          },\n          estimateGas: function estimateGas(options) {\n            var returnFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RETURN_FORMAT;\n            return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n              return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                while (1) switch (_context4.prev = _context4.next) {\n                  case 0:\n                    return _context4.abrupt(\"return\", this._contractMethodEstimateGas({\n                      abi: methodAbi,\n                      params: abiParams,\n                      returnFormat: returnFormat,\n                      options: options\n                    }));\n                  case 1:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }, _callee4, this);\n            }));\n          },\n          encodeABI: function encodeABI() {\n            return encodeMethodABI(methodAbi, abiParams);\n          },\n          createAccessList: function createAccessList(options, block) {\n            return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n              return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                while (1) switch (_context5.prev = _context5.next) {\n                  case 0:\n                    return _context5.abrupt(\"return\", this._contractMethodCreateAccessList(methodAbi, abiParams, internalErrorsAbis, options, block));\n                  case 1:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }, _callee5, this);\n            }));\n          }\n        };\n        if (methodAbi.stateMutability === 'payable') {\n          return methods;\n        }\n        return methods;\n      };\n    }\n  }, {\n    key: \"_contractMethodCall\",\n    value: function _contractMethodCall(abi, params, errorsAbi, options, block) {\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var tx, result;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              tx = getEthTxCallParams({\n                abi: abi,\n                params: params,\n                options: options,\n                contractOptions: Object.assign(Object.assign({}, this.options), {\n                  from: (_a = this.options.from) !== null && _a !== void 0 ? _a : this.config.defaultAccount\n                })\n              });\n              _context6.prev = 1;\n              _context6.next = 4;\n              return call(this, tx, block, DEFAULT_RETURN_FORMAT);\n            case 4:\n              result = _context6.sent;\n              return _context6.abrupt(\"return\", decodeMethodReturn(abi, result));\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](1);\n              if (_context6.t0 instanceof ContractExecutionError) {\n                // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n                decodeContractErrorData(errorsAbi, _context6.t0.innerError);\n              }\n              throw _context6.t0;\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[1, 8]]);\n      }));\n    }\n  }, {\n    key: \"_contractMethodCreateAccessList\",\n    value: function _contractMethodCreateAccessList(abi, params, errorsAbi, options, block) {\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var tx;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              tx = getCreateAccessListParams({\n                abi: abi,\n                params: params,\n                options: options,\n                contractOptions: Object.assign(Object.assign({}, this.options), {\n                  from: (_a = this.options.from) !== null && _a !== void 0 ? _a : this.config.defaultAccount\n                })\n              });\n              _context7.prev = 1;\n              return _context7.abrupt(\"return\", createAccessList(this, tx, block, DEFAULT_RETURN_FORMAT));\n            case 5:\n              _context7.prev = 5;\n              _context7.t0 = _context7[\"catch\"](1);\n              if (_context7.t0 instanceof ContractExecutionError) {\n                // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n                decodeContractErrorData(errorsAbi, _context7.t0.innerError);\n              }\n              throw _context7.t0;\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[1, 5]]);\n      }));\n    }\n  }, {\n    key: \"_contractMethodSend\",\n    value: function _contractMethodSend(abi, params, errorsAbi, options, contractOptions) {\n      var _a, _b;\n      var modifiedContractOptions = contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options;\n      modifiedContractOptions = Object.assign(Object.assign({}, modifiedContractOptions), {\n        input: undefined,\n        from: (_b = (_a = modifiedContractOptions.from) !== null && _a !== void 0 ? _a : this.defaultAccount) !== null && _b !== void 0 ? _b : undefined\n      });\n      var tx = getSendTxParams({\n        abi: abi,\n        params: params,\n        options: options,\n        contractOptions: modifiedContractOptions\n      });\n      var transactionToSend = sendTransaction(this, tx, DEFAULT_RETURN_FORMAT, {\n        // TODO Should make this configurable by the user\n        checkRevertBeforeSending: false\n      });\n      // eslint-disable-next-line no-void\n      void transactionToSend.on('error', function (error) {\n        if (error instanceof ContractExecutionError) {\n          // this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n          decodeContractErrorData(errorsAbi, error.innerError);\n        }\n      });\n      return transactionToSend;\n    }\n  }, {\n    key: \"_contractMethodDeploySend\",\n    value: function _contractMethodDeploySend(abi, params, options, contractOptions) {\n      var _this5 = this;\n      var _a, _b;\n      var modifiedContractOptions = contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options;\n      modifiedContractOptions = Object.assign(Object.assign({}, modifiedContractOptions), {\n        from: (_b = (_a = modifiedContractOptions.from) !== null && _a !== void 0 ? _a : this.defaultAccount) !== null && _b !== void 0 ? _b : undefined\n      });\n      var tx = getSendTxParams({\n        abi: abi,\n        params: params,\n        options: options,\n        contractOptions: modifiedContractOptions\n      });\n      return sendTransaction(this, tx, DEFAULT_RETURN_FORMAT, {\n        transactionResolver: function transactionResolver(receipt) {\n          if (receipt.status === BigInt(0)) {\n            throw new Web3ContractError(\"code couldn't be stored\", receipt);\n          }\n          var newContract = _this5.clone();\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          newContract.options.address = receipt.contractAddress;\n          return newContract;\n        },\n        // TODO Should make this configurable by the user\n        checkRevertBeforeSending: false\n      });\n    }\n  }, {\n    key: \"_contractMethodEstimateGas\",\n    value: function _contractMethodEstimateGas(_ref) {\n      var abi = _ref.abi,\n        params = _ref.params,\n        returnFormat = _ref.returnFormat,\n        options = _ref.options,\n        contractOptions = _ref.contractOptions;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var tx;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              tx = getEstimateGasParams({\n                abi: abi,\n                params: params,\n                options: options,\n                contractOptions: contractOptions !== null && contractOptions !== void 0 ? contractOptions : this.options\n              });\n              return _context8.abrupt(\"return\", estimateGas(this, tx, BlockTags.LATEST, returnFormat));\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n    }\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"_createContractEvent\",\n    value: function _createContractEvent(abi) {\n      var _this6 = this;\n      var returnFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RETURN_FORMAT;\n      return function () {\n        var _a;\n        var _encodeEventABI2 = encodeEventABI(_this6.options, abi, arguments.length <= 0 ? undefined : arguments[0]),\n          topics = _encodeEventABI2.topics,\n          fromBlock = _encodeEventABI2.fromBlock;\n        var sub = new LogsSubscription({\n          address: _this6.options.address,\n          topics: topics,\n          abi: abi,\n          jsonInterface: _this6._jsonInterface\n        }, {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          subscriptionManager: _this6.subscriptionManager,\n          returnFormat: returnFormat\n        });\n        if (!isNullish(fromBlock)) {\n          // emit past events when fromBlock is defined\n          _this6.getPastEvents(abi.name, {\n            fromBlock: fromBlock,\n            topics: topics\n          }, returnFormat).then(function (logs) {\n            logs.forEach(function (log) {\n              return sub.emit('data', log);\n            });\n          }).catch(function (error) {\n            sub.emit('error', new SubscriptionError('Failed to get past events.', error));\n          });\n        }\n        (_a = _this6.subscriptionManager) === null || _a === void 0 ? void 0 : _a.addSubscription(sub).catch(function (error) {\n          sub.emit('error', new SubscriptionError('Failed to subscribe.', error));\n        });\n        return sub;\n      };\n    }\n  }, {\n    key: \"subscribeToContextEvents\",\n    value: function subscribeToContextEvents(context) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      var contractThis = this;\n      this.context = context;\n      if (contractThis.syncWithContext) {\n        context.on(Web3ConfigEvent.CONFIG_CHANGE, function (event) {\n          contractThis.setConfig(_defineProperty({}, event.name, event.newValue));\n        });\n      }\n    }\n  }]);\n  return Contract;\n}(Web3Context);","map":{"version":3,"names":["Web3Context","Web3ConfigEvent","ContractExecutionError","ContractTransactionDataAndInputError","SubscriptionError","Web3ContractError","createAccessList","call","estimateGas","getLogs","NewHeadsSubscription","sendTransaction","encodeEventSignature","encodeFunctionSignature","decodeContractErrorData","isAbiErrorFragment","isAbiEventFragment","isAbiFunctionFragment","jsonInterfaceMethodToString","BlockTags","DEFAULT_RETURN_FORMAT","format","isDataFormat","keccak256","toChecksumAddress","isNullish","validator","utils","validatorUtils","Web3ValidatorError","ALL_EVENTS","ALL_EVENTS_ABI","decodeEventABI","decodeMethodReturn","encodeEventABI","encodeMethodABI","LogsSubscription","getCreateAccessListParams","getEstimateGasParams","getEthTxCallParams","getSendTxParams","isContractInitOptions","isWeb3ContractContext","contractSubscriptions","logs","newHeads","newBlockHeaders","Contract","_Web3Context","_inherits","_super","_createSuper","jsonInterface","addressOrOptionsOrContext","optionsOrContextOrReturnFormat","contextOrReturnFormat","returnFormat","_this","_classCallCheck","options","undefined","data","input","contractContext","provider","givenProvider","Object","assign","registeredSubscriptions","syncWithContext","_functions","_overloadedMethodAbis","Map","returnDataFormat","address","_parseAndSetJsonInterface","_parseAndSetAddress","_jsonInterface","gas","_a","gasLimit","gasPrice","from","_b","_c","subscribeToContextEvents","defineProperty","set","value","get","_address","_createClass","key","_events","_methods","clone","newContract","concat","_toConsumableArray","_errorsInterface","currentProvider","getContextObject","context","deploy","deployOptions","_this2","abi","find","j","type","inputs","stateMutability","_input","trim","args","arguments","contractOptions","send","modifiedOptions","_contractMethodDeploySend","length","__awaiter","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","_contractMethodEstimateGas","params","stop","encodeABI","getPastEvents","param1","param2","param3","eventName","name","_context2","_encodeEventABI","fromBlock","toBlock","topics","sent","decodedLogs","map","log","_this3","filter","filterKeys","keys","every","Array","isArray","some","v","String","returnValues","toUpperCase","inputAbi","indexed","hashedIndexedString","_callee2","abis","result","functionsAbi","errorsAbi","_iterator","_createForOfIteratorHelper","_step","s","n","done","a","signature","methodName","methodSignature","constant","payable","_d","abiFragment","_e","contractMethod","_createContractMethod","method","eventSignature","event","_createContractEvent","err","e","f","allEvents","_getAbiParams","transformJsonDataToAbiFormat","error","message","abiArr","errorsAbis","_this4","_len","_key","abiParams","methodAbi","internalErrorsAbis","arrayOfAbis","_abi","validate","errors","_iterator2","_step2","push","methods","block","_callee3","_callee3$","_context3","_contractMethodCall","_contractMethodSend","_callee4","_callee4$","_context4","_callee5","_callee5$","_context5","_contractMethodCreateAccessList","tx","config","defaultAccount","_context6","t0","innerError","_callee6","_context7","_callee7","modifiedContractOptions","transactionToSend","checkRevertBeforeSending","on","_this5","transactionResolver","receipt","status","BigInt","contractAddress","_ref","_context8","LATEST","_callee8","_this6","_encodeEventABI2","sub","subscriptionManager","then","forEach","emit","catch","addSubscription","contractThis","CONFIG_CHANGE","setConfig","_defineProperty","newValue"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-eth-contract\\src\\contract.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tWeb3Context,\n\tWeb3EventEmitter,\n\tWeb3PromiEvent,\n\tWeb3ConfigEvent,\n\tWeb3SubscriptionManager,\n} from 'web3-core';\nimport {\n\tContractExecutionError,\n\tContractTransactionDataAndInputError,\n\tSubscriptionError,\n\tWeb3ContractError,\n} from 'web3-errors';\nimport {\n\tcreateAccessList,\n\tcall,\n\testimateGas,\n\tgetLogs,\n\tNewHeadsSubscription,\n\tsendTransaction,\n\tSendTransactionEvents,\n} from 'web3-eth';\nimport {\n\tencodeEventSignature,\n\tencodeFunctionSignature,\n\tdecodeContractErrorData,\n\tisAbiErrorFragment,\n\tisAbiEventFragment,\n\tisAbiFunctionFragment,\n\tjsonInterfaceMethodToString,\n} from 'web3-eth-abi';\nimport {\n\tAbiConstructorFragment,\n\tAbiErrorFragment,\n\tAbiEventFragment,\n\tAbiFragment,\n\tAbiFunctionFragment,\n\tContractAbi,\n\tContractConstructorArgs,\n\tContractEvent,\n\tContractEvents,\n\tContractMethod,\n\tContractMethodInputParameters,\n\tContractMethodOutputParameters,\n\tAddress,\n\tBlockNumberOrTag,\n\tBlockTags,\n\tBytes,\n\tEthExecutionAPI,\n\tFilter,\n\tFilterAbis,\n\tHexString,\n\tLogsInput,\n\tMutable,\n\tContractInitOptions,\n\tNonPayableCallOptions,\n\tPayableCallOptions,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT,\n\tNumbers,\n\tWeb3ValidationErrorObject,\n} from 'web3-types';\nimport { format, isDataFormat, keccak256, toChecksumAddress } from 'web3-utils';\nimport {\n\tisNullish,\n\tvalidator,\n\tutils as validatorUtils,\n\tValidationSchemaInput,\n\tWeb3ValidatorError,\n} from 'web3-validator';\nimport { ALL_EVENTS, ALL_EVENTS_ABI } from './constants.js';\nimport { decodeEventABI, decodeMethodReturn, encodeEventABI, encodeMethodABI } from './encoding.js';\nimport { LogsSubscription } from './log_subscription.js';\nimport {\n\tContractAbiWithSignature,\n\tContractEventOptions,\n\tContractOptions,\n\tEventLog,\n\tNonPayableMethodObject,\n\tNonPayableTxOptions,\n\tPayableMethodObject,\n\tPayableTxOptions,\n\tWeb3ContractContext,\n} from './types.js';\nimport {\n\tgetCreateAccessListParams,\n\tgetEstimateGasParams,\n\tgetEthTxCallParams,\n\tgetSendTxParams,\n\tisContractInitOptions,\n\tisWeb3ContractContext,\n} from './utils.js';\n\ntype ContractBoundMethod<\n\tAbi extends AbiFunctionFragment,\n\tMethod extends ContractMethod<Abi> = ContractMethod<Abi>,\n> = (\n\t...args: Method['Inputs']\n) => Method['Abi']['stateMutability'] extends 'payable' | 'pure'\n\t? PayableMethodObject<Method['Inputs'], Method['Outputs']>\n\t: NonPayableMethodObject<Method['Inputs'], Method['Outputs']>;\n\nexport type ContractOverloadedMethodInputs<AbiArr extends ReadonlyArray<unknown>> = NonNullable<\n\tAbiArr extends readonly []\n\t\t? undefined\n\t\t: AbiArr extends readonly [infer A, ...infer R]\n\t\t? A extends AbiFunctionFragment\n\t\t\t? ContractMethodInputParameters<A['inputs']> | ContractOverloadedMethodInputs<R>\n\t\t\t: undefined\n\t\t: undefined\n>;\n\nexport type ContractOverloadedMethodOutputs<AbiArr extends ReadonlyArray<unknown>> = NonNullable<\n\tAbiArr extends readonly []\n\t\t? undefined\n\t\t: AbiArr extends readonly [infer A, ...infer R]\n\t\t? A extends AbiFunctionFragment\n\t\t\t? ContractMethodOutputParameters<A['outputs']> | ContractOverloadedMethodOutputs<R>\n\t\t\t: undefined\n\t\t: undefined\n>;\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractMethodsInterface<Abi extends ContractAbi> = {\n\t[MethodAbi in FilterAbis<\n\t\tAbi,\n\t\tAbiFunctionFragment & { type: 'function' }\n\t> as MethodAbi['name']]: ContractBoundMethod<MethodAbi>;\n\t// To allow users to use method signatures\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n} & { [key: string]: ContractBoundMethod<any> };\n\n/**\n * The event object can be accessed from `myContract.events.myEvent`.\n *\n * \\> Remember: To subscribe to an event, your provider must have support for subscriptions.\n *\n * ```ts\n * const subscription = await myContract.events.MyEvent([options])\n * ```\n *\n * @param options - The options used to subscribe for the event\n * @returns - A Promise resolved with {@link LogsSubscription} object\n */\nexport type ContractBoundEvent = (options?: ContractEventOptions) => LogsSubscription;\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractEventsInterface<\n\tAbi extends ContractAbi,\n\tEvents extends ContractEvents<Abi> = ContractEvents<Abi>,\n> = {\n\t[Name in keyof Events | 'allEvents']: ContractBoundEvent;\n} & {\n\t[key: string]: ContractBoundEvent;\n};\n\n// To avoid circular dependency between types and encoding, declared these types here.\nexport type ContractEventEmitterInterface<Abi extends ContractAbi> = {\n\t[EventAbi in FilterAbis<\n\t\tAbi,\n\t\tAbiFunctionFragment & { type: 'event' }\n\t> as EventAbi['name']]: ContractEvent<EventAbi>['Inputs'];\n};\n\ntype EventParameters = Parameters<typeof encodeEventABI>[2];\n\nconst contractSubscriptions = {\n\tlogs: LogsSubscription,\n\tnewHeads: NewHeadsSubscription,\n\tnewBlockHeaders: NewHeadsSubscription,\n};\n\n/**\n * The class designed to interact with smart contracts on the Ethereum blockchain.\n */\nexport class Contract<Abi extends ContractAbi>\n\textends Web3Context<EthExecutionAPI, typeof contractSubscriptions>\n\timplements Web3EventEmitter<ContractEventEmitterInterface<Abi>>\n{\n\t/**\n\t * The options `object` for the contract instance. `from`, `gas` and `gasPrice` are used as fallback values when sending transactions.\n\t *\n\t * ```ts\n\t * myContract.options;\n\t * > {\n\t *     address: '0x1234567890123456789012345678901234567891',\n\t *     jsonInterface: [...],\n\t *     from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe',\n\t *     gasPrice: '10000000000000',\n\t *     gas: 1000000\n\t * }\n\t *\n\t * myContract.options.from = '0x1234567890123456789012345678901234567891'; // default from address\n\t * myContract.options.gasPrice = '20000000000000'; // default gas price in wei\n\t * myContract.options.gas = 5000000; // provide as fallback always 5M gas\n\t * ```\n\t */\n\tpublic readonly options: ContractOptions;\n\n\t/**\n\t * Set to true if you want contracts' defaults to sync with global defaults.\n\t */\n\tpublic syncWithContext = false;\n\n\tprivate _errorsInterface!: AbiErrorFragment[];\n\tprivate _jsonInterface!: ContractAbiWithSignature;\n\tprivate _address?: Address;\n\tprivate _functions: Record<\n\t\tstring,\n\t\t{\n\t\t\tsignature: string;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tmethod: ContractBoundMethod<any>;\n\t\t}\n\t> = {};\n\tprivate readonly _overloadedMethodAbis: Map<string, AbiFunctionFragment[]>;\n\tprivate _methods!: ContractMethodsInterface<Abi>;\n\tprivate _events!: ContractEventsInterface<Abi>;\n\n\tprivate context?: Web3Context;\n\t/**\n\t * Creates a new contract instance with all its methods and events defined in its {@doclink glossary/json_interface | json interface} object.\n\t *\n\t * ```ts\n\t * new web3.eth.Contract(jsonInterface[, address][, options])\n\t * ```\n\t *\n\t * @param jsonInterface - The JSON interface for the contract to instantiate.\n\t * @param address - The address of the smart contract to call.\n\t * @param options - The options of the contract. Some are used as fallbacks for calls and transactions.\n\t * @param context - The context of the contract used for customizing the behavior of the contract.\n\t * @returns - The contract instance with all its methods and events.\n\t *\n\t * ```ts title=\"Example\"\n\t * var myContract = new web3.eth.Contract([...], '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe', {\n\t *   from: '0x1234567890123456789012345678901234567891', // default from address\n\t *   gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case\n\t * });\n\t * ```\n\t *\n\t * To use the type safe interface for these contracts you have to include the ABI definitions in your Typescript project and then declare these as `const`.\n\t *\n\t * ```ts title=\"Example\"\n\t * const myContractAbi = [....] as const; // ABI definitions\n\t * const myContract = new web3.eth.Contract(myContractAbi, '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe');\n\t * ```\n\t */\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\tcontext?: Web3ContractContext | Web3Context,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddress?: Address,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\toptions?: ContractInitOptions,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddress: Address | undefined,\n\t\toptions: ContractInitOptions,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t);\n\tpublic constructor(\n\t\tjsonInterface: Abi,\n\t\taddressOrOptionsOrContext?:\n\t\t\t| Address\n\t\t\t| ContractInitOptions\n\t\t\t| Web3ContractContext\n\t\t\t| Web3Context,\n\t\toptionsOrContextOrReturnFormat?:\n\t\t\t| ContractInitOptions\n\t\t\t| Web3ContractContext\n\t\t\t| Web3Context\n\t\t\t| DataFormat,\n\t\tcontextOrReturnFormat?: Web3ContractContext | Web3Context | DataFormat,\n\t\treturnFormat?: DataFormat,\n\t) {\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst options = isContractInitOptions(addressOrOptionsOrContext)\n\t\t\t? addressOrOptionsOrContext\n\t\t\t: isContractInitOptions(optionsOrContextOrReturnFormat)\n\t\t\t? optionsOrContextOrReturnFormat\n\t\t\t: undefined;\n\n\t\tif (!isNullish(options) && !isNullish(options.data) && !isNullish(options.input))\n\t\t\tthrow new ContractTransactionDataAndInputError({\n\t\t\t\tdata: options.data as HexString,\n\t\t\t\tinput: options.input as HexString,\n\t\t\t});\n\n\t\tlet contractContext;\n\t\tif (isWeb3ContractContext(addressOrOptionsOrContext)) {\n\t\t\tcontractContext = addressOrOptionsOrContext;\n\t\t} else if (isWeb3ContractContext(optionsOrContextOrReturnFormat)) {\n\t\t\tcontractContext = optionsOrContextOrReturnFormat;\n\t\t} else {\n\t\t\tcontractContext = contextOrReturnFormat;\n\t\t}\n\n\t\tlet provider;\n\t\tif (\n\t\t\ttypeof addressOrOptionsOrContext === 'object' &&\n\t\t\t'provider' in addressOrOptionsOrContext\n\t\t) {\n\t\t\tprovider = addressOrOptionsOrContext.provider;\n\t\t} else if (\n\t\t\ttypeof optionsOrContextOrReturnFormat === 'object' &&\n\t\t\t'provider' in optionsOrContextOrReturnFormat\n\t\t) {\n\t\t\tprovider = optionsOrContextOrReturnFormat.provider;\n\t\t} else if (\n\t\t\ttypeof contextOrReturnFormat === 'object' &&\n\t\t\t'provider' in contextOrReturnFormat\n\t\t) {\n\t\t\tprovider = contextOrReturnFormat.provider;\n\t\t} else {\n\t\t\tprovider = Contract.givenProvider;\n\t\t}\n\n\t\tsuper({\n\t\t\t...contractContext,\n\t\t\tprovider,\n\t\t\tregisteredSubscriptions: contractSubscriptions,\n\t\t});\n\n\t\tthis._overloadedMethodAbis = new Map<string, AbiFunctionFragment[]>();\n\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst returnDataFormat = isDataFormat(contextOrReturnFormat)\n\t\t\t? contextOrReturnFormat\n\t\t\t: isDataFormat(optionsOrContextOrReturnFormat)\n\t\t\t? optionsOrContextOrReturnFormat\n\t\t\t: returnFormat ?? DEFAULT_RETURN_FORMAT;\n\n\t\tconst address =\n\t\t\ttypeof addressOrOptionsOrContext === 'string' ? addressOrOptionsOrContext : undefined;\n\n\t\tthis._parseAndSetJsonInterface(jsonInterface, returnDataFormat);\n\n\t\tif (!isNullish(address)) {\n\t\t\tthis._parseAndSetAddress(address, returnDataFormat);\n\t\t}\n\n\t\tthis.options = {\n\t\t\taddress,\n\t\t\tjsonInterface: this._jsonInterface,\n\t\t\tgas: options?.gas ?? options?.gasLimit,\n\t\t\tgasPrice: options?.gasPrice,\n\t\t\tfrom: options?.from,\n\t\t\tinput: options?.input ?? options?.data,\n\t\t};\n\n\t\tthis.syncWithContext = (options as ContractInitOptions)?.syncWithContext ?? false;\n\t\tif (contractContext instanceof Web3Context) {\n\t\t\tthis.subscribeToContextEvents(contractContext);\n\t\t}\n\n\t\tObject.defineProperty(this.options, 'address', {\n\t\t\tset: (value: Address) => this._parseAndSetAddress(value, returnDataFormat),\n\t\t\tget: () => this._address,\n\t\t});\n\n\t\tObject.defineProperty(this.options, 'jsonInterface', {\n\t\t\tset: (value: ContractAbi) => this._parseAndSetJsonInterface(value, returnDataFormat),\n\t\t\tget: () => this._jsonInterface,\n\t\t});\n\t}\n\n\t/**\n\t * Subscribe to an event.\n\t *\n\t * ```ts\n\t * await myContract.events.MyEvent([options])\n\t * ```\n\t *\n\t * There is a special event `allEvents` that can be used to subscribe all events.\n\t *\n\t * ```ts\n\t * await myContract.events.allEvents([options])\n\t * ```\n\t *\n\t * @returns - When individual event is accessed will returns {@link ContractBoundEvent} object\n\t */\n\tpublic get events() {\n\t\treturn this._events;\n\t}\n\n\t/**\n\t * Creates a transaction object for that method, which then can be `called`, `send`, `estimated`, `createAccessList` , or `ABI encoded`.\n\t *\n\t * The methods of this smart contract are available through:\n\t *\n\t * The name: `myContract.methods.myMethod(123)`\n\t * The name with parameters: `myContract.methods['myMethod(uint256)'](123)`\n\t * The signature `myContract.methods['0x58cf5f10'](123)`\n\t *\n\t * This allows calling functions with same name but different parameters from the JavaScript contract object.\n\t *\n\t * \\> The method signature does not provide a type safe interface, so we recommend to use method `name` instead.\n\t *\n\t * ```ts\n\t * // calling a method\n\t * const result = await myContract.methods.myMethod(123).call({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * // or sending and using a promise\n\t * const receipt = await myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t *\n\t * // or sending and using the events\n\t * const sendObject = myContract.methods.myMethod(123).send({from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'});\n\t * sendObject.on('transactionHash', function(hash){\n\t *   ...\n\t * });\n\t * sendObject.on('receipt', function(receipt){\n\t *   ...\n\t * });\n\t * sendObject.on('confirmation', function(confirmationNumber, receipt){\n\t *   ...\n\t * });\n\t * sendObject.on('error', function(error, receipt) {\n\t *   ...\n\t * });\n\t * ```\n\t *\n\t * @returns - Either returns {@link PayableMethodObject} or {@link NonPayableMethodObject} based on the definitions of the {@doclink glossary/json_interface | json interface} of that contract.\n\t */\n\tpublic get methods() {\n\t\treturn this._methods;\n\t}\n\n\t/**\n\t * Clones the current contract instance. This doesn't deploy contract on blockchain and only creates a local clone.\n\t *\n\t * @returns - The new contract instance.\n\t *\n\t * ```ts\n\t * const contract1 = new eth.Contract(abi, address, {gasPrice: '12345678', from: fromAddress});\n\t *\n\t * const contract2 = contract1.clone();\n\t * contract2.options.address = address2;\n\t *\n\t * (contract1.options.address !== contract2.options.address);\n\t * > true\n\t * ```\n\t */\n\tpublic clone() {\n\t\tlet newContract: Contract<any>;\n\n\t\tif (this.options.address) {\n\t\t\tnewContract = new Contract<Abi>(\n\t\t\t\t[...this._jsonInterface, ...this._errorsInterface] as unknown as Abi,\n\t\t\t\tthis.options.address,\n\t\t\t\t{\n\t\t\t\t\tgas: this.options.gas,\n\t\t\t\t\tgasPrice: this.options.gasPrice,\n\t\t\t\t\tfrom: this.options.from,\n\t\t\t\t\tinput: this.options.input,\n\t\t\t\t\tprovider: this.currentProvider,\n\t\t\t\t\tsyncWithContext: this.syncWithContext,\n\t\t\t\t},\n\t\t\t\tthis.getContextObject(),\n\t\t\t);\n\t\t} else {\n\t\t\tnewContract = new Contract<Abi>(\n\t\t\t\t[...this._jsonInterface, ...this._errorsInterface] as unknown as Abi,\n\t\t\t\t{\n\t\t\t\t\tgas: this.options.gas,\n\t\t\t\t\tgasPrice: this.options.gasPrice,\n\t\t\t\t\tfrom: this.options.from,\n\t\t\t\t\tinput: this.options.input,\n\t\t\t\t\tprovider: this.currentProvider,\n\t\t\t\t\tsyncWithContext: this.syncWithContext,\n\t\t\t\t},\n\t\t\t\tthis.getContextObject(),\n\t\t\t);\n\t\t}\n\t\tif (this.context) newContract.subscribeToContextEvents(this.context);\n\n\t\treturn newContract;\n\t}\n\n\t/**\n\t * Call this function to deploy the contract to the blockchain. After successful deployment the promise will resolve with a new contract instance.\n\t *\n\t * ```ts\n\t * myContract.deploy({\n\t *   input: '0x12345...', // data keyword can be used, too. If input is used, data will be ignored.\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .send({\n\t *   from: '0x1234567890123456789012345678901234567891',\n\t *   gas: 1500000,\n\t *   gasPrice: '30000000000000'\n\t * }, function(error, transactionHash){ ... })\n\t * .on('error', function(error){ ... })\n\t * .on('transactionHash', function(transactionHash){ ... })\n\t * .on('receipt', function(receipt){\n\t *  console.log(receipt.contractAddress) // contains the new contract address\n\t * })\n\t * .on('confirmation', function(confirmationNumber, receipt){ ... })\n\t * .then(function(newContractInstance){\n\t *   console.log(newContractInstance.options.address) // instance with the new contract address\n\t * });\n\t *\n\t *\n\t * // When the data is already set as an option to the contract itself\n\t * myContract.options.data = '0x12345...';\n\t *\n\t * myContract.deploy({\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .send({\n\t *   from: '0x1234567890123456789012345678901234567891',\n\t *   gas: 1500000,\n\t *   gasPrice: '30000000000000'\n\t * })\n\t * .then(function(newContractInstance){\n\t *   console.log(newContractInstance.options.address) // instance with the new contract address\n\t * });\n\t *\n\t *\n\t * // Simply encoding\n\t * myContract.deploy({\n\t *   input: '0x12345...',\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .encodeABI();\n\t * > '0x12345...0000012345678765432'\n\t *\n\t *\n\t * // Gas estimation\n\t * myContract.deploy({\n\t *   input: '0x12345...',\n\t *   arguments: [123, 'My String']\n\t * })\n\t * .estimateGas(function(err, gas){\n\t *   console.log(gas);\n\t * });\n\t * ```\n\t *\n\t * @returns - The transaction object\n\t */\n\tpublic deploy(deployOptions?: {\n\t\t/**\n\t\t * The byte code of the contract.\n\t\t */\n\t\tdata?: HexString;\n\t\tinput?: HexString;\n\t\t/**\n\t\t * The arguments which get passed to the constructor on deployment.\n\t\t */\n\t\targuments?: ContractConstructorArgs<Abi>;\n\t}) {\n\t\tlet abi = this._jsonInterface.find(j => j.type === 'constructor') as AbiConstructorFragment;\n\n\t\tif (!abi) {\n\t\t\tabi = {\n\t\t\t\ttype: 'constructor',\n\t\t\t\tinputs: [],\n\t\t\t\tstateMutability: '',\n\t\t\t} as AbiConstructorFragment;\n\t\t}\n\n\t\tconst _input = format(\n\t\t\t{ format: 'bytes' },\n\t\t\tdeployOptions?.input ?? deployOptions?.data ?? this.options.input,\n\t\t\tDEFAULT_RETURN_FORMAT,\n\t\t);\n\n\t\tif (!_input || _input.trim() === '0x') {\n\t\t\tthrow new Web3ContractError('contract creation without any data provided.');\n\t\t}\n\n\t\tconst args = deployOptions?.arguments ?? [];\n\n\t\tconst contractOptions: ContractOptions = { ...this.options, input: _input };\n\n\t\treturn {\n\t\t\targuments: args,\n\t\t\tsend: (\n\t\t\t\toptions?: PayableTxOptions,\n\t\t\t): Web3PromiEvent<\n\t\t\t\tContract<Abi>,\n\t\t\t\tSendTransactionEvents<typeof DEFAULT_RETURN_FORMAT>\n\t\t\t> => {\n\t\t\t\tconst modifiedOptions = { ...options };\n\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\t\treturn this._contractMethodDeploySend(\n\t\t\t\t\tabi as AbiFunctionFragment,\n\t\t\t\t\targs as unknown[],\n\t\t\t\t\tmodifiedOptions,\n\t\t\t\t\tcontractOptions,\n\t\t\t\t);\n\t\t\t},\n\t\t\testimateGas: async <ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\t\t\toptions?: PayableCallOptions,\n\t\t\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t\t\t) => {\n\t\t\t\tconst modifiedOptions = { ...options };\n\n\t\t\t\treturn this._contractMethodEstimateGas({\n\t\t\t\t\tabi: abi as AbiFunctionFragment,\n\t\t\t\t\tparams: args as unknown[],\n\t\t\t\t\treturnFormat,\n\t\t\t\t\toptions: modifiedOptions,\n\t\t\t\t\tcontractOptions,\n\t\t\t\t});\n\t\t\t},\n\t\t\tencodeABI: () =>\n\t\t\t\tencodeMethodABI(\n\t\t\t\t\tabi as AbiFunctionFragment,\n\t\t\t\t\targs as unknown[],\n\t\t\t\t\tformat({ format: 'bytes' }, _input as Bytes, DEFAULT_RETURN_FORMAT),\n\t\t\t\t),\n\t\t};\n\t}\n\n\t/**\n\t * Gets past events for this contract.\n\t *\n\t * ```ts\n\t * const events = await myContract.getPastEvents('MyEvent', {\n\t *   filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\n\t *   fromBlock: 0,\n\t *   toBlock: 'latest'\n\t * });\n\t *\n\t * > [{\n\t *   returnValues: {\n\t *       myIndexedParam: 20,\n\t *       myOtherIndexedParam: '0x123456789...',\n\t *       myNonIndexParam: 'My String'\n\t *   },\n\t *   raw: {\n\t *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n\t *   },\n\t *   event: 'MyEvent',\n\t *   signature: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *   logIndex: 0,\n\t *   transactionIndex: 0,\n\t *   transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n\t *   blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n\t *   blockNumber: 1234,\n\t *   address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n\t * },{\n\t *   ...\n\t * }]\n\t * ```\n\t *\n\t * @param eventName - The name of the event in the contract, or `allEvents` to get all events.\n\t * @param filter - The filter options used to get events.\n\t * @param returnFormat - Return format\n\t * @returns - An array with the past event `Objects`, matching the given event name and filter.\n\t */\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\teventName: keyof ContractEvents<Abi> | 'allEvents',\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tfilter: Omit<Filter, 'address'>,\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\teventName: keyof ContractEvents<Abi> | 'allEvents',\n\t\tfilter: Omit<Filter, 'address'>,\n\t\treturnFormat?: ReturnFormat,\n\t): Promise<(string | EventLog)[]>;\n\tpublic async getPastEvents<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\tparam1?: keyof ContractEvents<Abi> | 'allEvents' | Omit<Filter, 'address'> | ReturnFormat,\n\t\tparam2?: Omit<Filter, 'address'> | ReturnFormat,\n\t\tparam3?: ReturnFormat,\n\t): Promise<(string | EventLog)[]> {\n\t\tconst eventName = typeof param1 === 'string' ? param1 : 'allEvents';\n\n\t\tconst options =\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\ttypeof param1 !== 'string' && !isDataFormat(param1)\n\t\t\t\t? param1\n\t\t\t\t: !isDataFormat(param2)\n\t\t\t\t? param2\n\t\t\t\t: {};\n\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tconst returnFormat = isDataFormat(param1)\n\t\t\t? param1\n\t\t\t: isDataFormat(param2)\n\t\t\t? param2\n\t\t\t: param3 ?? DEFAULT_RETURN_FORMAT;\n\n\t\tconst abi =\n\t\t\teventName === 'allEvents' || eventName === ALL_EVENTS\n\t\t\t\t? ALL_EVENTS_ABI\n\t\t\t\t: (this._jsonInterface.find(\n\t\t\t\t\t\tj => 'name' in j && j.name === eventName,\n\t\t\t\t  ) as AbiEventFragment & { signature: string });\n\n\t\tif (!abi) {\n\t\t\tthrow new Web3ContractError(`Event ${eventName} not found.`);\n\t\t}\n\t\tconst { fromBlock, toBlock, topics, address } = encodeEventABI(\n\t\t\tthis.options,\n\t\t\tabi,\n\t\t\toptions ?? {},\n\t\t);\n\t\tconst logs = await getLogs(this, { fromBlock, toBlock, topics, address }, returnFormat);\n\t\tconst decodedLogs = logs.map(log =>\n\t\t\ttypeof log === 'string'\n\t\t\t\t? log\n\t\t\t\t: decodeEventABI(abi, log as LogsInput, this._jsonInterface, returnFormat),\n\t\t);\n\n\t\tconst filter = options?.filter ?? {};\n\t\tconst filterKeys = Object.keys(filter);\n\n\t\tif (filterKeys.length > 0) {\n\t\t\treturn decodedLogs.filter(log => {\n\t\t\t\tif (typeof log === 'string') return true;\n\n\t\t\t\treturn filterKeys.every((key: string) => {\n\t\t\t\t\tif (Array.isArray(filter[key])) {\n\t\t\t\t\t\treturn (filter[key] as Numbers[]).some(\n\t\t\t\t\t\t\t(v: Numbers) =>\n\t\t\t\t\t\t\t\tString(log.returnValues[key]).toUpperCase() ===\n\t\t\t\t\t\t\t\tString(v).toUpperCase(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst inputAbi = abi.inputs?.filter(input => input.name === key)[0];\n\t\t\t\t\tif (inputAbi?.indexed && inputAbi.type === 'string') {\n\t\t\t\t\t\tconst hashedIndexedString = keccak256(filter[key] as string);\n\t\t\t\t\t\tif (hashedIndexedString === String(log.returnValues[key])) return true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tString(log.returnValues[key]).toUpperCase() ===\n\t\t\t\t\t\tString(filter[key]).toUpperCase()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn decodedLogs;\n\t}\n\n\tprivate _parseAndSetAddress(value?: Address, returnFormat: DataFormat = DEFAULT_RETURN_FORMAT) {\n\t\tthis._address = value\n\t\t\t? toChecksumAddress(format({ format: 'address' }, value, returnFormat))\n\t\t\t: value;\n\t}\n\n\tprivate _parseAndSetJsonInterface(\n\t\tabis: ContractAbi,\n\t\treturnFormat: DataFormat = DEFAULT_RETURN_FORMAT,\n\t) {\n\t\tthis._functions = {};\n\n\t\tthis._methods = {} as ContractMethodsInterface<Abi>;\n\t\tthis._events = {} as ContractEventsInterface<Abi>;\n\n\t\tlet result: ContractAbi = [];\n\n\t\tconst functionsAbi = abis.filter(abi => abi.type !== 'error');\n\t\tconst errorsAbi = abis.filter(abi =>\n\t\t\tisAbiErrorFragment(abi),\n\t\t) as unknown as AbiErrorFragment[];\n\n\t\tfor (const a of functionsAbi) {\n\t\t\tconst abi: Mutable<AbiFragment & { signature: HexString }> = {\n\t\t\t\t...a,\n\t\t\t\tsignature: '',\n\t\t\t};\n\n\t\t\tif (isAbiFunctionFragment(abi)) {\n\t\t\t\tconst methodName = jsonInterfaceMethodToString(abi);\n\t\t\t\tconst methodSignature = encodeFunctionSignature(methodName);\n\t\t\t\tabi.signature = methodSignature;\n\n\t\t\t\t// make constant and payable backwards compatible\n\t\t\t\tabi.constant =\n\t\t\t\t\tabi.stateMutability === 'view' ??\n\t\t\t\t\tabi.stateMutability === 'pure' ??\n\t\t\t\t\tabi.constant;\n\n\t\t\t\tabi.payable = abi.stateMutability === 'payable' ?? abi.payable;\n\t\t\t\tthis._overloadedMethodAbis.set(abi.name, [\n\t\t\t\t\t...(this._overloadedMethodAbis.get(abi.name) ?? []),\n\t\t\t\t\tabi,\n\t\t\t\t]);\n\t\t\t\tconst abiFragment = this._overloadedMethodAbis.get(abi.name) ?? [];\n\t\t\t\tconst contractMethod = this._createContractMethod<\n\t\t\t\t\ttypeof abiFragment,\n\t\t\t\t\tAbiErrorFragment\n\t\t\t\t>(abiFragment, errorsAbi);\n\n\t\t\t\tthis._functions[methodName] = {\n\t\t\t\t\tsignature: methodSignature,\n\t\t\t\t\tmethod: contractMethod,\n\t\t\t\t};\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[abi.name as keyof ContractMethodsInterface<Abi>] = this._functions[\n\t\t\t\t\tmethodName\n\t\t\t\t].method as never;\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[methodName as keyof ContractMethodsInterface<Abi>] = this._functions[\n\t\t\t\t\tmethodName\n\t\t\t\t].method as never;\n\n\t\t\t\t// We don't know a particular type of the Abi method so can't type check\n\t\t\t\tthis._methods[methodSignature as keyof ContractMethodsInterface<Abi>] = this\n\t\t\t\t\t._functions[methodName].method as never;\n\t\t\t} else if (isAbiEventFragment(abi)) {\n\t\t\t\tconst eventName = jsonInterfaceMethodToString(abi);\n\t\t\t\tconst eventSignature = encodeEventSignature(eventName);\n\t\t\t\tconst event = this._createContractEvent(abi, returnFormat);\n\t\t\t\tabi.signature = eventSignature;\n\n\t\t\t\tif (!(eventName in this._events) || abi.name === 'bound') {\n\t\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\t\tthis._events[eventName as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t\t}\n\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\tthis._events[abi.name as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t\t// It's a private type and we don't want to expose it and no need to check\n\t\t\t\tthis._events[eventSignature as keyof ContractEventsInterface<Abi>] = event as never;\n\t\t\t}\n\n\t\t\tresult = [...result, abi];\n\t\t}\n\n\t\tthis._events.allEvents = this._createContractEvent(ALL_EVENTS_ABI, returnFormat);\n\t\tthis._jsonInterface = [...result] as unknown as ContractAbiWithSignature;\n\t\tthis._errorsInterface = errorsAbi;\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _getAbiParams(abi: AbiFunctionFragment, params: unknown[]): Array<unknown> {\n\t\ttry {\n\t\t\treturn validatorUtils.transformJsonDataToAbiFormat(abi.inputs ?? [], params);\n\t\t} catch (error) {\n\t\t\tthrow new Web3ContractError(\n\t\t\t\t`Invalid parameters for method ${abi.name}: ${(error as Error).message}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _createContractMethod<T extends AbiFunctionFragment[], E extends AbiErrorFragment>(\n\t\tabiArr: T,\n\t\terrorsAbis: E[],\n\t): ContractBoundMethod<T[0]> {\n\t\tconst abi = abiArr[abiArr.length - 1];\n\t\treturn (...params: unknown[]) => {\n\t\t\tlet abiParams!: Array<unknown>;\n\t\t\tconst abis = this._overloadedMethodAbis.get(abi.name) ?? [];\n\t\t\tlet methodAbi: AbiFunctionFragment = abis[0];\n\t\t\tconst internalErrorsAbis = errorsAbis;\n\n\t\t\tconst arrayOfAbis: AbiFunctionFragment[] = abis.filter(\n\t\t\t\t_abi => (_abi.inputs ?? []).length === params.length,\n\t\t\t);\n\n\t\t\tif (abis.length === 1 || arrayOfAbis.length === 0) {\n\t\t\t\tabiParams = this._getAbiParams(methodAbi, params);\n\t\t\t\tvalidator.validate(abi.inputs ?? [], abiParams);\n\t\t\t} else {\n\t\t\t\tconst errors: Web3ValidationErrorObject[] = [];\n\n\t\t\t\tfor (const _abi of arrayOfAbis) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tabiParams = this._getAbiParams(_abi, params);\n\t\t\t\t\t\tvalidator.validate(\n\t\t\t\t\t\t\t_abi.inputs as unknown as ValidationSchemaInput,\n\t\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmethodAbi = _abi;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\terrors.push(e as Web3ValidationErrorObject);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (errors.length === arrayOfAbis.length) {\n\t\t\t\t\tthrow new Web3ValidatorError(errors);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst methods = {\n\t\t\t\targuments: abiParams,\n\n\t\t\t\tcall: async (\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\tblock?: BlockNumberOrTag,\n\t\t\t\t) =>\n\t\t\t\t\tthis._contractMethodCall(\n\t\t\t\t\t\tmethodAbi,\n\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\tinternalErrorsAbis,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tblock,\n\t\t\t\t\t),\n\n\t\t\t\tsend: (options?: PayableTxOptions | NonPayableTxOptions) =>\n\t\t\t\t\tthis._contractMethodSend(methodAbi, abiParams, internalErrorsAbis, options),\n\n\t\t\t\testimateGas: async <ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t\t\t\t) =>\n\t\t\t\t\tthis._contractMethodEstimateGas({\n\t\t\t\t\t\tabi: methodAbi,\n\t\t\t\t\t\tparams: abiParams,\n\t\t\t\t\t\treturnFormat,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t}),\n\n\t\t\t\tencodeABI: () => encodeMethodABI(methodAbi, abiParams),\n\n\t\t\t\tcreateAccessList: async (\n\t\t\t\t\toptions?: PayableCallOptions | NonPayableCallOptions,\n\t\t\t\t\tblock?: BlockNumberOrTag,\n\t\t\t\t) =>\n\t\t\t\t\tthis._contractMethodCreateAccessList(\n\t\t\t\t\t\tmethodAbi,\n\t\t\t\t\t\tabiParams,\n\t\t\t\t\t\tinternalErrorsAbis,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tblock,\n\t\t\t\t\t),\n\t\t\t};\n\n\t\t\tif (methodAbi.stateMutability === 'payable') {\n\t\t\t\treturn methods as PayableMethodObject<\n\t\t\t\t\tContractOverloadedMethodInputs<T>,\n\t\t\t\t\tContractOverloadedMethodOutputs<T>\n\t\t\t\t>;\n\t\t\t}\n\t\t\treturn methods as NonPayableMethodObject<\n\t\t\t\tContractOverloadedMethodInputs<T>,\n\t\t\t\tContractOverloadedMethodOutputs<T>\n\t\t\t>;\n\t\t};\n\t}\n\n\tprivate async _contractMethodCall<Options extends PayableCallOptions | NonPayableCallOptions>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tblock?: BlockNumberOrTag,\n\t) {\n\t\tconst tx = getEthTxCallParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions,\n\t\t\tcontractOptions: {\n\t\t\t\t...this.options,\n\t\t\t\tfrom: this.options.from ?? this.config.defaultAccount,\n\t\t\t},\n\t\t});\n\t\ttry {\n\t\t\tconst result = await call(this, tx, block, DEFAULT_RETURN_FORMAT);\n\t\t\treturn decodeMethodReturn(abi, result);\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.innerError);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async _contractMethodCreateAccessList<\n\t\tOptions extends PayableCallOptions | NonPayableCallOptions,\n\t>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tblock?: BlockNumberOrTag,\n\t) {\n\t\tconst tx = getCreateAccessListParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions,\n\t\t\tcontractOptions: {\n\t\t\t\t...this.options,\n\t\t\t\tfrom: this.options.from ?? this.config.defaultAccount,\n\t\t\t},\n\t\t});\n\n\t\ttry {\n\t\t\treturn createAccessList(this, tx, block, DEFAULT_RETURN_FORMAT);\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.innerError);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate _contractMethodSend<Options extends PayableCallOptions | NonPayableCallOptions>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\terrorsAbi: AbiErrorFragment[],\n\t\toptions?: Options,\n\t\tcontractOptions?: ContractOptions,\n\t) {\n\t\tlet modifiedContractOptions = contractOptions ?? this.options;\n\t\tmodifiedContractOptions = {\n\t\t\t...modifiedContractOptions,\n\t\t\tinput: undefined,\n\t\t\tfrom: modifiedContractOptions.from ?? this.defaultAccount ?? undefined,\n\t\t};\n\n\t\tconst tx = getSendTxParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions,\n\t\t\tcontractOptions: modifiedContractOptions,\n\t\t});\n\t\tconst transactionToSend = sendTransaction(this, tx, DEFAULT_RETURN_FORMAT, {\n\t\t\t// TODO Should make this configurable by the user\n\t\t\tcheckRevertBeforeSending: false,\n\t\t});\n\n\t\t// eslint-disable-next-line no-void\n\t\tvoid transactionToSend.on('error', (error: unknown) => {\n\t\t\tif (error instanceof ContractExecutionError) {\n\t\t\t\t// this will parse the error data by trying to decode the ABI error inputs according to EIP-838\n\t\t\t\tdecodeContractErrorData(errorsAbi, error.innerError);\n\t\t\t}\n\t\t});\n\n\t\treturn transactionToSend;\n\t}\n\n\tprivate _contractMethodDeploySend<Options extends PayableCallOptions | NonPayableCallOptions>(\n\t\tabi: AbiFunctionFragment,\n\t\tparams: unknown[],\n\t\toptions?: Options,\n\t\tcontractOptions?: ContractOptions,\n\t) {\n\t\tlet modifiedContractOptions = contractOptions ?? this.options;\n\t\tmodifiedContractOptions = {\n\t\t\t...modifiedContractOptions,\n\t\t\tfrom: modifiedContractOptions.from ?? this.defaultAccount ?? undefined,\n\t\t};\n\n\t\tconst tx = getSendTxParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions,\n\t\t\tcontractOptions: modifiedContractOptions,\n\t\t});\n\n\t\treturn sendTransaction(this, tx, DEFAULT_RETURN_FORMAT, {\n\t\t\ttransactionResolver: receipt => {\n\t\t\t\tif (receipt.status === BigInt(0)) {\n\t\t\t\t\tthrow new Web3ContractError(\"code couldn't be stored\", receipt);\n\t\t\t\t}\n\n\t\t\t\tconst newContract = this.clone();\n\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\t\tnewContract.options.address = receipt.contractAddress;\n\t\t\t\treturn newContract;\n\t\t\t},\n\t\t\t// TODO Should make this configurable by the user\n\t\t\tcheckRevertBeforeSending: false,\n\t\t});\n\t}\n\n\tprivate async _contractMethodEstimateGas<\n\t\tOptions extends PayableCallOptions | NonPayableCallOptions,\n\t\tReturnFormat extends DataFormat,\n\t>({\n\t\tabi,\n\t\tparams,\n\t\treturnFormat,\n\t\toptions,\n\t\tcontractOptions,\n\t}: {\n\t\tabi: AbiFunctionFragment;\n\t\tparams: unknown[];\n\t\treturnFormat: ReturnFormat;\n\t\toptions?: Options;\n\t\tcontractOptions?: ContractOptions;\n\t}) {\n\t\tconst tx = getEstimateGasParams({\n\t\t\tabi,\n\t\t\tparams,\n\t\t\toptions,\n\t\t\tcontractOptions: contractOptions ?? this.options,\n\t\t});\n\n\t\treturn estimateGas(this, tx, BlockTags.LATEST, returnFormat);\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate _createContractEvent(\n\t\tabi: AbiEventFragment & { signature: HexString },\n\t\treturnFormat: DataFormat = DEFAULT_RETURN_FORMAT,\n\t): ContractBoundEvent {\n\t\treturn (...params: unknown[]) => {\n\t\t\tconst { topics, fromBlock } = encodeEventABI(\n\t\t\t\tthis.options,\n\t\t\t\tabi,\n\t\t\t\tparams[0] as EventParameters,\n\t\t\t);\n\t\t\tconst sub = new LogsSubscription(\n\t\t\t\t{\n\t\t\t\t\taddress: this.options.address,\n\t\t\t\t\ttopics,\n\t\t\t\t\tabi,\n\t\t\t\t\tjsonInterface: this._jsonInterface,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tsubscriptionManager: this.subscriptionManager as Web3SubscriptionManager<\n\t\t\t\t\t\tunknown,\n\t\t\t\t\t\tany\n\t\t\t\t\t>,\n\t\t\t\t\treturnFormat,\n\t\t\t\t},\n\t\t\t);\n\t\t\tif (!isNullish(fromBlock)) {\n\t\t\t\t// emit past events when fromBlock is defined\n\t\t\t\tthis.getPastEvents(abi.name, { fromBlock, topics }, returnFormat)\n\t\t\t\t\t.then(logs => {\n\t\t\t\t\t\tlogs.forEach(log => sub.emit('data', log as EventLog));\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error: Error) => {\n\t\t\t\t\t\tsub.emit(\n\t\t\t\t\t\t\t'error',\n\t\t\t\t\t\t\tnew SubscriptionError('Failed to get past events.', error),\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tthis.subscriptionManager?.addSubscription(sub).catch((error: Error) => {\n\t\t\t\tsub.emit('error', new SubscriptionError('Failed to subscribe.', error));\n\t\t\t});\n\n\t\t\treturn sub;\n\t\t};\n\t}\n\n\tprotected subscribeToContextEvents<T extends Web3Context>(context: T): void {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst contractThis = this;\n\t\tthis.context = context;\n\n\t\tif (contractThis.syncWithContext) {\n\t\t\tcontext.on(Web3ConfigEvent.CONFIG_CHANGE, event => {\n\t\t\t\tcontractThis.setConfig({ [event.name]: event.newValue });\n\t\t\t});\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}