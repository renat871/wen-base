{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { ResolverMethodMissingError } from 'web3-errors';\nimport { isNullish, sha3 } from 'web3-utils';\nimport { isHexStrict } from 'web3-validator';\nimport { interfaceIds, methodsInInterface } from './config.js';\nimport { namehash } from './utils.js';\n//  Default public resolver\n//  https://github.com/ensdomains/resolvers/blob/master/contracts/PublicResolver.sol\nexport var Resolver = /*#__PURE__*/function () {\n  function Resolver(registry) {\n    _classCallCheck(this, Resolver);\n    this.registry = registry;\n  }\n  _createClass(Resolver, [{\n    key: \"getResolverContractAdapter\",\n    value: function getResolverContractAdapter(ENSName) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", this.registry.getResolver(ENSName));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n    //  https://eips.ethereum.org/EIPS/eip-165\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"checkInterfaceSupport\",\n    value: function checkInterfaceSupport(resolverContract, methodName) {\n      var _a, _b;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var supported;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!isNullish(interfaceIds[methodName])) {\n                _context2.next = 2;\n                break;\n              }\n              throw new ResolverMethodMissingError((_a = resolverContract.options.address) !== null && _a !== void 0 ? _a : '', methodName);\n            case 2:\n              _context2.next = 4;\n              return resolverContract.methods.supportsInterface(interfaceIds[methodName]).call();\n            case 4:\n              supported = _context2.sent;\n              if (supported) {\n                _context2.next = 7;\n                break;\n              }\n              throw new ResolverMethodMissingError((_b = resolverContract.options.address) !== null && _b !== void 0 ? _b : '', methodName);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"supportsInterface\",\n    value: function supportsInterface(ENSName, interfaceId) {\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var resolverContract, interfaceIdParam;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.getResolverContractAdapter(ENSName);\n            case 2:\n              resolverContract = _context3.sent;\n              interfaceIdParam = interfaceId;\n              if (isHexStrict(interfaceIdParam)) {\n                _context3.next = 9;\n                break;\n              }\n              interfaceIdParam = (_a = sha3(interfaceId)) !== null && _a !== void 0 ? _a : '';\n              if (!(interfaceId === '')) {\n                _context3.next = 8;\n                break;\n              }\n              throw new Error('Invalid interface Id');\n            case 8:\n              interfaceIdParam = interfaceIdParam.slice(0, 10);\n            case 9:\n              return _context3.abrupt(\"return\", resolverContract.methods.supportsInterface(interfaceIdParam).call());\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(ENSName) {\n      var coinType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var resolverContract;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.getResolverContractAdapter(ENSName);\n            case 2:\n              resolverContract = _context4.sent;\n              _context4.next = 5;\n              return this.checkInterfaceSupport(resolverContract, methodsInInterface.addr);\n            case 5:\n              return _context4.abrupt(\"return\", resolverContract.methods.addr(namehash(ENSName), coinType).call());\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"getPubkey\",\n    value: function getPubkey(ENSName) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var resolverContract;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.getResolverContractAdapter(ENSName);\n            case 2:\n              resolverContract = _context5.sent;\n              _context5.next = 5;\n              return this.checkInterfaceSupport(resolverContract, methodsInInterface.pubkey);\n            case 5:\n              return _context5.abrupt(\"return\", resolverContract.methods.pubkey(namehash(ENSName)).call());\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getContenthash\",\n    value: function getContenthash(ENSName) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var resolverContract;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.getResolverContractAdapter(ENSName);\n            case 2:\n              resolverContract = _context6.sent;\n              _context6.next = 5;\n              return this.checkInterfaceSupport(resolverContract, methodsInInterface.contenthash);\n            case 5:\n              return _context6.abrupt(\"return\", resolverContract.methods.contenthash(namehash(ENSName)).call());\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n    }\n  }]);\n  return Resolver;\n}();","map":{"version":3,"names":["ResolverMethodMissingError","isNullish","sha3","isHexStrict","interfaceIds","methodsInInterface","namehash","Resolver","registry","_classCallCheck","_createClass","key","value","getResolverContractAdapter","ENSName","getResolver","_context","stop","_callee","checkInterfaceSupport","resolverContract","methodName","_context2","next","_a","options","address","methods","supportsInterface","call","supported","sent","_b","_callee2","interfaceId","_context3","interfaceIdParam","Error","slice","abrupt","_callee3","getAddress","coinType","arguments","length","undefined","_context4","addr","_callee4","getPubkey","_context5","pubkey","_callee5","getContenthash","_context6","contenthash","_callee6"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-eth-ens\\src\\resolver.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ResolverMethodMissingError } from 'web3-errors';\nimport { Contract } from 'web3-eth-contract';\nimport { isNullish, sha3 } from 'web3-utils';\nimport { isHexStrict } from 'web3-validator';\nimport { PublicResolverAbi } from './abi/ens/PublicResolver.js';\nimport { interfaceIds, methodsInInterface } from './config.js';\nimport { Registry } from './registry.js';\nimport { namehash } from './utils.js';\n\n//  Default public resolver\n//  https://github.com/ensdomains/resolvers/blob/master/contracts/PublicResolver.sol\n\nexport class Resolver {\n\tprivate readonly registry: Registry;\n\n\tpublic constructor(registry: Registry) {\n\t\tthis.registry = registry;\n\t}\n\n\tprivate async getResolverContractAdapter(ENSName: string) {\n\t\t//  TODO : (Future 4.1.0 TDB) cache resolver contract if frequently queried same ENS name, refresh cache based on TTL and usage, also limit cache size, optional cache with a flag\n\t\treturn this.registry.getResolver(ENSName);\n\t}\n\n\t//  https://eips.ethereum.org/EIPS/eip-165\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic async checkInterfaceSupport(\n\t\tresolverContract: Contract<typeof PublicResolverAbi>,\n\t\tmethodName: string,\n\t) {\n\t\tif (isNullish(interfaceIds[methodName]))\n\t\t\tthrow new ResolverMethodMissingError(\n\t\t\t\tresolverContract.options.address ?? '',\n\t\t\t\tmethodName,\n\t\t\t);\n\n\t\tconst supported = await resolverContract.methods\n\t\t\t.supportsInterface(interfaceIds[methodName])\n\t\t\t.call();\n\n\t\tif (!supported)\n\t\t\tthrow new ResolverMethodMissingError(\n\t\t\t\tresolverContract.options.address ?? '',\n\t\t\t\tmethodName,\n\t\t\t);\n\t}\n\n\tpublic async supportsInterface(ENSName: string, interfaceId: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tlet interfaceIdParam = interfaceId;\n\n\t\tif (!isHexStrict(interfaceIdParam)) {\n\t\t\tinterfaceIdParam = sha3(interfaceId) ?? '';\n\n\t\t\tif (interfaceId === '') throw new Error('Invalid interface Id');\n\n\t\t\tinterfaceIdParam = interfaceIdParam.slice(0, 10);\n\t\t}\n\n\t\treturn resolverContract.methods.supportsInterface(interfaceIdParam).call();\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-inferrable-types\n\tpublic async getAddress(ENSName: string, coinType: number = 60) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.addr);\n\n\t\treturn resolverContract.methods.addr(namehash(ENSName), coinType).call();\n\t}\n\n\tpublic async getPubkey(ENSName: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.pubkey);\n\n\t\treturn resolverContract.methods.pubkey(namehash(ENSName)).call();\n\t}\n\n\tpublic async getContenthash(ENSName: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.contenthash);\n\n\t\treturn resolverContract.methods.contenthash(namehash(ENSName)).call();\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}