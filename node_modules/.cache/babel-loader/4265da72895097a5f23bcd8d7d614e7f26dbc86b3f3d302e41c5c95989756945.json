{"ast":null,"code":"import _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Validator } from './validator.js';\nimport { ethAbiToJsonSchema } from './utils.js';\nimport { Web3ValidatorError } from './errors.js';\nexport var Web3Validator = /*#__PURE__*/function () {\n  function Web3Validator() {\n    _classCallCheck(this, Web3Validator);\n    this._validator = Validator.factory();\n  }\n  _createClass(Web3Validator, [{\n    key: \"validateJSONSchema\",\n    value: function validateJSONSchema(schema, data, options) {\n      return this._validator.validate(schema, data, options);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(schema, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        silent: false\n      };\n      var _a, _b;\n      var jsonSchema = ethAbiToJsonSchema(schema);\n      if (Array.isArray(jsonSchema.items) && ((_a = jsonSchema.items) === null || _a === void 0 ? void 0 : _a.length) === 0 && data.length === 0) {\n        return undefined;\n      }\n      if (Array.isArray(jsonSchema.items) && ((_b = jsonSchema.items) === null || _b === void 0 ? void 0 : _b.length) === 0 && data.length !== 0) {\n        throw new Web3ValidatorError([{\n          instancePath: '/0',\n          schemaPath: '/',\n          keyword: 'required',\n          message: 'empty schema against data can not be validated',\n          params: data\n        }]);\n      }\n      return this._validator.validate(jsonSchema, data, options);\n    }\n  }]);\n  return Web3Validator;\n}();","map":{"version":3,"names":["Validator","ethAbiToJsonSchema","Web3ValidatorError","Web3Validator","_classCallCheck","_validator","factory","_createClass","key","value","validateJSONSchema","schema","data","options","validate","arguments","length","undefined","silent","jsonSchema","Array","isArray","items","_a","_b","instancePath","schemaPath","keyword","message","params"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-validator\\src\\web3_validator.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3ValidationErrorObject } from 'web3-types';\n\nimport { Validator } from './validator.js';\nimport { ethAbiToJsonSchema } from './utils.js';\nimport { Json, ValidationSchemaInput, Web3ValidationOptions } from './types.js';\nimport { Web3ValidatorError } from './errors.js';\n\nexport class Web3Validator {\n\tprivate readonly _validator: Validator;\n\tpublic constructor() {\n\t\tthis._validator = Validator.factory();\n\t}\n\tpublic validateJSONSchema(\n\t\tschema: object,\n\t\tdata: object,\n\t\toptions?: Web3ValidationOptions,\n\t): Web3ValidationErrorObject[] | undefined {\n\t\treturn this._validator.validate(schema, data as Json, options);\n\t}\n\tpublic validate(\n\t\tschema: ValidationSchemaInput,\n\t\tdata: ReadonlyArray<unknown>,\n\t\toptions: Web3ValidationOptions = { silent: false },\n\t): Web3ValidationErrorObject[] | undefined {\n\t\tconst jsonSchema = ethAbiToJsonSchema(schema);\n\t\tif (\n\t\t\tArray.isArray(jsonSchema.items) &&\n\t\t\tjsonSchema.items?.length === 0 &&\n\t\t\tdata.length === 0\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (\n\t\t\tArray.isArray(jsonSchema.items) &&\n\t\t\tjsonSchema.items?.length === 0 &&\n\t\t\tdata.length !== 0\n\t\t) {\n\t\t\tthrow new Web3ValidatorError([\n\t\t\t\t{\n\t\t\t\t\tinstancePath: '/0',\n\t\t\t\t\tschemaPath: '/',\n\t\t\t\t\tkeyword: 'required',\n\t\t\t\t\tmessage: 'empty schema against data can not be validated',\n\t\t\t\t\tparams: data,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\treturn this._validator.validate(jsonSchema, data as Json, options);\n\t}\n}\n"],"mappings":";;AAkBA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,kBAAkB,QAAQ,YAAY;AAE/C,SAASC,kBAAkB,QAAQ,aAAa;AAEhD,WAAaC,aAAa;EAEzB,SAAAA,cAAA;IAAAC,eAAA,OAAAD,aAAA;IACC,IAAI,CAACE,UAAU,GAAGL,SAAS,CAACM,OAAO,EAAE;EACtC;EAACC,YAAA,CAAAJ,aAAA;IAAAK,GAAA;IAAAC,KAAA,EACM,SAAAC,mBACNC,MAAc,EACdC,IAAY,EACZC,OAA+B;MAE/B,OAAO,IAAI,CAACR,UAAU,CAACS,QAAQ,CAACH,MAAM,EAAEC,IAAY,EAAEC,OAAO,CAAC;IAC/D;EAAC;IAAAL,GAAA;IAAAC,KAAA,EACM,SAAAK,SACNH,MAA6B,EAC7BC,IAA4B,EACsB;MAAA,IAAlDC,OAAA,GAAAE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiC;QAAEG,MAAM,EAAE;MAAK,CAAE;;MAElD,IAAMC,UAAU,GAAGlB,kBAAkB,CAACU,MAAM,CAAC;MAC7C,IACCS,KAAK,CAACC,OAAO,CAACF,UAAU,CAACG,KAAK,CAAC,IAC/B,EAAAC,EAAA,GAAAJ,UAAU,CAACG,KAAK,cAAAC,EAAA,uBAAAA,EAAA,CAAEP,MAAM,MAAK,CAAC,IAC9BJ,IAAI,CAACI,MAAM,KAAK,CAAC,EAChB;QACD,OAAOC,SAAS;;MAGjB,IACCG,KAAK,CAACC,OAAO,CAACF,UAAU,CAACG,KAAK,CAAC,IAC/B,EAAAE,EAAA,GAAAL,UAAU,CAACG,KAAK,cAAAE,EAAA,uBAAAA,EAAA,CAAER,MAAM,MAAK,CAAC,IAC9BJ,IAAI,CAACI,MAAM,KAAK,CAAC,EAChB;QACD,MAAM,IAAId,kBAAkB,CAAC,CAC5B;UACCuB,YAAY,EAAE,IAAI;UAClBC,UAAU,EAAE,GAAG;UACfC,OAAO,EAAE,UAAU;UACnBC,OAAO,EAAE,gDAAgD;UACzDC,MAAM,EAAEjB;SACR,CACD,CAAC;;MAGH,OAAO,IAAI,CAACP,UAAU,CAACS,QAAQ,CAACK,UAAU,EAAEP,IAAY,EAAEC,OAAO,CAAC;IACnE;EAAC;EAAA,OAAAV,aAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}