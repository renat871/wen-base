{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Context } from 'web3-core';\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\nexport var Net = /*#__PURE__*/function (_Web3Context) {\n  _inherits(Net, _Web3Context);\n  var _super = _createSuper(Net);\n  function Net() {\n    _classCallCheck(this, Net);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Net, [{\n    key: \"getId\",\n    value:\n    /**\n     * Gets the current network ID\n     *\n     * @param returnFormat - Return format\n     * @returns A Promise of the network ID.\n     * @example\n     * ```ts\n     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n     * await net.getId();\n     * > 1\n     * ```\n     */\n    function getId() {\n      var returnFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RETURN_FORMAT;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", rpcMethodsWrappers.getId(this, returnFormat));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n    /**\n     * Get the number of peers connected to.\n     *\n     * @param returnFormat - Return format\n     * @returns A promise of the number of the peers connected to.\n     * @example\n     * ```ts\n     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n     * await net.getPeerCount();\n     * > 0\n     * ```\n     */\n  }, {\n    key: \"getPeerCount\",\n    value: function getPeerCount() {\n      var returnFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RETURN_FORMAT;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", rpcMethodsWrappers.getPeerCount(this, returnFormat));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n    /**\n     * Check if the node is listening for peers\n     *\n     * @returns A promise of a boolean if the node is listening to peers\n     * @example\n     * ```ts\n     * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n     * await net.isListening();\n     * > true\n     * ```\n     */\n  }, {\n    key: \"isListening\",\n    value: function isListening() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", rpcMethodsWrappers.isListening(this));\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n    }\n  }]);\n  return Net;\n}(Web3Context);","map":{"version":3,"names":["Web3Context","DEFAULT_RETURN_FORMAT","rpcMethodsWrappers","Net","_Web3Context","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","getId","returnFormat","length","undefined","_context","stop","_callee","getPeerCount","_context2","_callee2","isListening","_context3","_callee3"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-net\\src\\net.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Context } from 'web3-core';\nimport { DataFormat, DEFAULT_RETURN_FORMAT, Web3NetAPI } from 'web3-types';\n\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\n\nexport class Net extends Web3Context<Web3NetAPI> {\n\t/**\n\t * Gets the current network ID\n\t *\n\t * @param returnFormat - Return format\n\t * @returns A Promise of the network ID.\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.getId();\n\t * > 1\n\t * ```\n\t */\n\tpublic async getId<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getId(this, returnFormat);\n\t}\n\n\t/**\n\t * Get the number of peers connected to.\n\t *\n\t * @param returnFormat - Return format\n\t * @returns A promise of the number of the peers connected to.\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.getPeerCount();\n\t * > 0\n\t * ```\n\t */\n\tpublic async getPeerCount<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getPeerCount(this, returnFormat);\n\t}\n\n\t/**\n\t * Check if the node is listening for peers\n\t *\n\t * @returns A promise of a boolean if the node is listening to peers\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.isListening();\n\t * > true\n\t * ```\n\t */\n\tpublic async isListening() {\n\t\treturn rpcMethodsWrappers.isListening(this);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA,SAASA,WAAW,QAAQ,WAAW;AACvC,SAAqBC,qBAAqB,QAAoB,YAAY;AAE1E,OAAO,KAAKC,kBAAkB,MAAM,0BAA0B;AAE9D,WAAaC,GAAI,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,GAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,GAAA;EAAA,SAAAA,IAAA;IAAAK,eAAA,OAAAL,GAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,GAAA;IAAAS,GAAA;IAAAC,KAAA;IAChB;;;;;;;;;;;;IAYa,SAAAC,MAAA,EACsD;MAAA,IAAlEC,YAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAA6BT,qBAAqC;;;;;+CAE3DC,kBAAkB,CAACY,KAAK,CAAC,IAAI,EAAEC,YAAY,CAAC;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAC,IAAA;UAAA;QAAA,GAAAC,OAAA;MAAA,CACnD;;IAED;;;;;;;;;;;;EAAA;IAAAR,GAAA;IAAAC,KAAA,EAYa,SAAAQ,aAAA,EACsD;MAAA,IAAlEN,YAAA,GAAAL,SAAA,CAAAM,MAAA,QAAAN,SAAA,QAAAO,SAAA,GAAAP,SAAA,MAA6BT,qBAAqC;;;;;gDAE3DC,kBAAkB,CAACmB,YAAY,CAAC,IAAI,EAAEN,YAAY,CAAC;YAAA;YAAA;cAAA,OAAAO,SAAA,CAAAH,IAAA;UAAA;QAAA,GAAAI,QAAA;MAAA,CAC1D;;IAED;;;;;;;;;;;EAAA;IAAAX,GAAA;IAAAC,KAAA,EAWa,SAAAW,YAAA,EAAW;;;;;gDAChBtB,kBAAkB,CAACsB,WAAW,CAAC,IAAI,CAAC;YAAA;YAAA;cAAA,OAAAC,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAO,QAAA;MAAA,CAC3C;;EAAA;EAAA,OAAAvB,GAAA;AAAA,EAlDuBH,WAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}