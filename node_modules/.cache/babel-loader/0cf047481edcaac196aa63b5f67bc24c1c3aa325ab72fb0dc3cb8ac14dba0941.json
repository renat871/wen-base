{"ast":null,"code":"import _regeneratorRuntime from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nexport var getAccounts = function getAccounts(requestManager) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", requestManager.send({\n            method: 'personal_listAccounts',\n            params: []\n          }));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n};\nexport var newAccount = function newAccount(requestManager, password) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", requestManager.send({\n            method: 'personal_newAccount',\n            params: [password]\n          }));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n};\nexport var unlockAccount = function unlockAccount(requestManager, address, password, unlockDuration) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", requestManager.send({\n            method: 'personal_unlockAccount',\n            params: [address, password, unlockDuration]\n          }));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n};\nexport var lockAccount = function lockAccount(requestManager, address) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", requestManager.send({\n            method: 'personal_lockAccount',\n            params: [address]\n          }));\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n};\nexport var importRawKey = function importRawKey(requestManager, keyData, passphrase) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", requestManager.send({\n            method: 'personal_importRawKey',\n            params: [keyData, passphrase]\n          }));\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n};\nexport var sendTransaction = function sendTransaction(requestManager, tx, passphrase) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          return _context6.abrupt(\"return\", requestManager.send({\n            method: 'personal_sendTransaction',\n            params: [tx, passphrase]\n          }));\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n};\nexport var signTransaction = function signTransaction(requestManager, tx, passphrase) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          return _context7.abrupt(\"return\", requestManager.send({\n            method: 'personal_signTransaction',\n            params: [tx, passphrase]\n          }));\n        case 1:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n};\nexport var sign = function sign(requestManager, data, address, passphrase) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          return _context8.abrupt(\"return\", requestManager.send({\n            method: 'personal_sign',\n            params: [data, address, passphrase]\n          }));\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n};\nexport var ecRecover = function ecRecover(requestManager, signedData, signature) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", requestManager.send({\n            method: 'personal_ecRecover',\n            params: [signedData, signature]\n          }));\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n};","map":{"version":3,"names":["getAccounts","requestManager","__awaiter","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","send","method","params","stop","newAccount","password","_callee2","_callee2$","_context2","unlockAccount","address","unlockDuration","_callee3","_callee3$","_context3","lockAccount","_callee4","_callee4$","_context4","importRawKey","keyData","passphrase","_callee5","_callee5$","_context5","sendTransaction","tx","_callee6","_callee6$","_context6","signTransaction","_callee7","_callee7$","_context7","sign","data","_callee8","_callee8$","_context8","ecRecover","signedData","signature","_callee9","_callee9$","_context9"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-rpc-methods\\src\\personal_rpc_methods.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3RequestManager } from 'web3-core';\nimport { Address, EthPersonalAPI, HexString, Transaction } from 'web3-types';\n\nexport const getAccounts = async (requestManager: Web3RequestManager<EthPersonalAPI>) =>\n\trequestManager.send({\n\t\tmethod: 'personal_listAccounts',\n\t\tparams: [],\n\t});\n\nexport const newAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tpassword: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_newAccount',\n\t\tparams: [password],\n\t});\n\nexport const unlockAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\taddress: Address,\n\tpassword: string,\n\tunlockDuration: number,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_unlockAccount',\n\t\tparams: [address, password, unlockDuration],\n\t});\n\nexport const lockAccount = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\taddress: Address,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_lockAccount',\n\t\tparams: [address],\n\t});\n\nexport const importRawKey = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tkeyData: HexString,\n\tpassphrase: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_importRawKey',\n\t\tparams: [keyData, passphrase],\n\t});\n\nexport const sendTransaction = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\ttx: Transaction,\n\tpassphrase: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_sendTransaction',\n\t\tparams: [tx, passphrase],\n\t});\n\nexport const signTransaction = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\ttx: Transaction,\n\tpassphrase: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_signTransaction',\n\t\tparams: [tx, passphrase],\n\t});\n\nexport const sign = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tdata: HexString,\n\taddress: Address,\n\tpassphrase: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_sign',\n\t\tparams: [data, address, passphrase],\n\t});\n\nexport const ecRecover = async (\n\trequestManager: Web3RequestManager<EthPersonalAPI>,\n\tsignedData: HexString,\n\tsignature: string,\n) =>\n\trequestManager.send({\n\t\tmethod: 'personal_ecRecover',\n\t\tparams: [signedData, signature],\n\t});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}