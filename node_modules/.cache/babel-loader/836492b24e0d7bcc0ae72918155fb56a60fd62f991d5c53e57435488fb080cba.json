{"ast":null,"code":"import _classCallCheck from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { z, ZodIssueCode } from 'zod';\nimport { Web3ValidatorError } from './errors.js';\nimport formats from './formats.js';\nvar convertToZod = function convertToZod(schema) {\n  if ((!(schema === null || schema === void 0 ? void 0 : schema.type) || (schema === null || schema === void 0 ? void 0 : schema.type) === 'object') && (schema === null || schema === void 0 ? void 0 : schema.properties)) {\n    var obj = {};\n    for (var _i = 0, _Object$keys = Object.keys(schema.properties); _i < _Object$keys.length; _i++) {\n      var name = _Object$keys[_i];\n      var zItem = convertToZod(schema.properties[name]);\n      if (zItem) {\n        obj[name] = zItem;\n      }\n    }\n    if (Array.isArray(schema.required)) {\n      return z.object(obj).partial().required(schema.required.reduce(function (acc, v) {\n        return Object.assign(Object.assign({}, acc), _defineProperty({}, v, true));\n      }, {}));\n    }\n    return z.object(obj).partial();\n  }\n  if ((schema === null || schema === void 0 ? void 0 : schema.type) === 'array' && (schema === null || schema === void 0 ? void 0 : schema.items)) {\n    if (Array.isArray(schema.items) && schema.items.length > 0) {\n      var arr = [];\n      var _iterator = _createForOfIteratorHelper(schema.items),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          var _zItem = convertToZod(item);\n          if (_zItem) {\n            arr.push(_zItem);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return z.tuple(arr);\n    }\n    return z.array(convertToZod(schema.items));\n  }\n  if (schema.oneOf && Array.isArray(schema.oneOf)) {\n    return z.union(schema.oneOf.map(function (oneOfSchema) {\n      return convertToZod(oneOfSchema);\n    }));\n  }\n  if (schema === null || schema === void 0 ? void 0 : schema.format) {\n    return z.any().refine(formats[schema.format], function (value) {\n      return {\n        params: {\n          value: value,\n          format: schema.format\n        }\n      };\n    });\n  }\n  if ((schema === null || schema === void 0 ? void 0 : schema.type) && (schema === null || schema === void 0 ? void 0 : schema.type) !== 'object' && typeof z[String(schema.type)] === 'function') {\n    return z[String(schema.type)]();\n  }\n  return z.object({\n    data: z.any()\n  }).partial();\n};\nexport var Validator = /*#__PURE__*/function () {\n  function Validator() {\n    _classCallCheck(this, Validator);\n  }\n  _createClass(Validator, [{\n    key: \"validate\",\n    value: function validate(schema, data, options) {\n      var _a, _b;\n      var zod = convertToZod(schema);\n      var result = zod.safeParse(data);\n      if (!result.success) {\n        var errors = this.convertErrors((_b = (_a = result.error) === null || _a === void 0 ? void 0 : _a.issues) !== null && _b !== void 0 ? _b : []);\n        if (errors) {\n          if (options === null || options === void 0 ? void 0 : options.silent) {\n            return errors;\n          }\n          throw new Web3ValidatorError(errors);\n        }\n      }\n      return undefined;\n    }\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"convertErrors\",\n    value: function convertErrors(errors) {\n      if (errors && Array.isArray(errors) && errors.length > 0) {\n        return errors.map(function (error) {\n          var _a;\n          var message;\n          var keyword;\n          var params;\n          var schemaPath;\n          schemaPath = error.path.join('/');\n          var field = String(error.path[error.path.length - 1]);\n          var instancePath = error.path.join('/');\n          if (error.code === ZodIssueCode.too_big) {\n            keyword = 'maxItems';\n            schemaPath = \"\".concat(instancePath, \"/maxItems\");\n            params = {\n              limit: error.maximum\n            };\n            message = \"must NOT have more than \".concat(error.maximum, \" items\");\n          } else if (error.code === ZodIssueCode.too_small) {\n            keyword = 'minItems';\n            schemaPath = \"\".concat(instancePath, \"/minItems\");\n            params = {\n              limit: error.minimum\n            };\n            message = \"must NOT have fewer than \".concat(error.minimum, \" items\");\n          } else if (error.code === ZodIssueCode.custom) {\n            var _ref = (_a = error.params) !== null && _a !== void 0 ? _a : {},\n              value = _ref.value,\n              format = _ref.format;\n            if (typeof value === 'undefined') {\n              message = \"value at \\\"/\".concat(schemaPath, \"\\\" is required\");\n            } else {\n              message = \"value \\\"\".concat(\n              // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n              typeof value === 'object' ? JSON.stringify(value) : value, \"\\\" at \\\"/\").concat(schemaPath, \"\\\" must pass \\\"\").concat(format, \"\\\" validation\");\n            }\n            params = {\n              value: value\n            };\n          }\n          return {\n            keyword: keyword !== null && keyword !== void 0 ? keyword : field,\n            instancePath: instancePath ? \"/\".concat(instancePath) : '',\n            schemaPath: schemaPath ? \"#\".concat(schemaPath) : '#',\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            params: params !== null && params !== void 0 ? params : {\n              value: error.message\n            },\n            message: message !== null && message !== void 0 ? message : error.message\n          };\n        });\n      }\n      return undefined;\n    }\n  }], [{\n    key: \"factory\",\n    value:\n    // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n    function factory() {\n      if (!Validator.validatorInstance) {\n        Validator.validatorInstance = new Validator();\n      }\n      return Validator.validatorInstance;\n    }\n  }]);\n  return Validator;\n}();","map":{"version":3,"names":["z","ZodIssueCode","Web3ValidatorError","formats","convertToZod","schema","type","properties","obj","_i","_Object$keys","Object","keys","length","name","zItem","Array","isArray","required","object","partial","reduce","acc","v","assign","_defineProperty","items","arr","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","value","push","err","e","f","tuple","array","oneOf","union","map","oneOfSchema","format","any","refine","params","String","data","Validator","_classCallCheck","_createClass","key","validate","options","zod","result","safeParse","success","errors","convertErrors","_b","_a","error","issues","silent","undefined","message","keyword","schemaPath","path","join","field","instancePath","code","too_big","concat","limit","maximum","too_small","minimum","custom","_ref","JSON","stringify","factory","validatorInstance"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-validator\\src\\validator.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3ValidationErrorObject } from 'web3-types';\n\nimport { z, ZodType, ZodIssue, ZodIssueCode, ZodTypeAny } from 'zod';\n\nimport { RawCreateParams } from 'zod/lib/types';\nimport { Web3ValidatorError } from './errors.js';\nimport { Json, JsonSchema } from './types.js';\nimport formats from './formats.js';\n\nconst convertToZod = (schema: JsonSchema): ZodType => {\n\tif ((!schema?.type || schema?.type === 'object') && schema?.properties) {\n\t\tconst obj: { [key: string]: ZodType } = {};\n\t\tfor (const name of Object.keys(schema.properties)) {\n\t\t\tconst zItem = convertToZod(schema.properties[name]);\n\t\t\tif (zItem) {\n\t\t\t\tobj[name] = zItem;\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(schema.required)) {\n\t\t\treturn z\n\t\t\t\t.object(obj)\n\t\t\t\t.partial()\n\t\t\t\t.required(schema.required.reduce((acc, v: string) => ({ ...acc, [v]: true }), {}));\n\t\t}\n\t\treturn z.object(obj).partial();\n\t}\n\n\tif (schema?.type === 'array' && schema?.items) {\n\t\tif (Array.isArray(schema.items) && schema.items.length > 0) {\n\t\t\tconst arr: Partial<[ZodTypeAny, ...ZodTypeAny[]]> = [];\n\t\t\tfor (const item of schema.items) {\n\t\t\t\tconst zItem = convertToZod(item);\n\t\t\t\tif (zItem) {\n\t\t\t\t\tarr.push(zItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn z.tuple(arr as [ZodTypeAny, ...ZodTypeAny[]]);\n\t\t}\n\t\treturn z.array(convertToZod(schema.items as JsonSchema));\n\t}\n\n\tif (schema.oneOf && Array.isArray(schema.oneOf)) {\n\t\treturn z.union(\n\t\t\tschema.oneOf.map(oneOfSchema => convertToZod(oneOfSchema)) as [\n\t\t\t\tZodTypeAny,\n\t\t\t\tZodTypeAny,\n\t\t\t\t...ZodTypeAny[],\n\t\t\t],\n\t\t);\n\t}\n\n\tif (schema?.format) {\n\t\treturn z.any().refine(formats[schema.format], (value: unknown) => ({\n\t\t\tparams: { value, format: schema.format },\n\t\t}));\n\t}\n\n\tif (\n\t\tschema?.type &&\n\t\tschema?.type !== 'object' &&\n\t\ttypeof (z as unknown as { [key: string]: (params?: RawCreateParams) => ZodType })[\n\t\t\tString(schema.type)\n\t\t] === 'function'\n\t) {\n\t\treturn (z as unknown as { [key: string]: (params?: RawCreateParams) => ZodType })[\n\t\t\tString(schema.type)\n\t\t]();\n\t}\n\treturn z.object({ data: z.any() }).partial();\n};\n\nexport class Validator {\n\t// eslint-disable-next-line no-use-before-define\n\tprivate static validatorInstance?: Validator;\n\n\t// eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n\tpublic static factory(): Validator {\n\t\tif (!Validator.validatorInstance) {\n\t\t\tValidator.validatorInstance = new Validator();\n\t\t}\n\t\treturn Validator.validatorInstance;\n\t}\n\n\tpublic validate(schema: JsonSchema, data: Json, options?: { silent?: boolean }) {\n\t\tconst zod = convertToZod(schema);\n\t\tconst result = zod.safeParse(data);\n\t\tif (!result.success) {\n\t\t\tconst errors = this.convertErrors(result.error?.issues ?? []);\n\t\t\tif (errors) {\n\t\t\t\tif (options?.silent) {\n\t\t\t\t\treturn errors;\n\t\t\t\t}\n\t\t\t\tthrow new Web3ValidatorError(errors);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\t// eslint-disable-next-line class-methods-use-this\n\tprivate convertErrors(errors: ZodIssue[] | undefined): Web3ValidationErrorObject[] | undefined {\n\t\tif (errors && Array.isArray(errors) && errors.length > 0) {\n\t\t\treturn errors.map((error: ZodIssue) => {\n\t\t\t\tlet message;\n\t\t\t\tlet keyword;\n\t\t\t\tlet params;\n\t\t\t\tlet schemaPath;\n\n\t\t\t\tschemaPath = error.path.join('/');\n\n\t\t\t\tconst field = String(error.path[error.path.length - 1]);\n\t\t\t\tconst instancePath = error.path.join('/');\n\t\t\t\tif (error.code === ZodIssueCode.too_big) {\n\t\t\t\t\tkeyword = 'maxItems';\n\t\t\t\t\tschemaPath = `${instancePath}/maxItems`;\n\t\t\t\t\tparams = { limit: error.maximum };\n\t\t\t\t\tmessage = `must NOT have more than ${error.maximum} items`;\n\t\t\t\t} else if (error.code === ZodIssueCode.too_small) {\n\t\t\t\t\tkeyword = 'minItems';\n\t\t\t\t\tschemaPath = `${instancePath}/minItems`;\n\t\t\t\t\tparams = { limit: error.minimum };\n\t\t\t\t\tmessage = `must NOT have fewer than ${error.minimum} items`;\n\t\t\t\t} else if (error.code === ZodIssueCode.custom) {\n\t\t\t\t\tconst { value, format } = (error.params ?? {}) as {\n\t\t\t\t\t\tvalue: unknown;\n\t\t\t\t\t\tformat: string;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (typeof value === 'undefined') {\n\t\t\t\t\t\tmessage = `value at \"/${schemaPath}\" is required`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage = `value \"${\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\t\t\t\ttypeof value === 'object' ? JSON.stringify(value) : value\n\t\t\t\t\t\t}\" at \"/${schemaPath}\" must pass \"${format}\" validation`;\n\t\t\t\t\t}\n\n\t\t\t\t\tparams = { value };\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tkeyword: keyword ?? field,\n\t\t\t\t\tinstancePath: instancePath ? `/${instancePath}` : '',\n\t\t\t\t\tschemaPath: schemaPath ? `#${schemaPath}` : '#',\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\t\t\t\tparams: params ?? { value: error.message },\n\t\t\t\t\tmessage: message ?? error.message,\n\t\t\t\t} as Web3ValidationErrorObject;\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"],"mappings":";;;;AAkBA,SAASA,CAAC,EAAqBC,YAAY,QAAoB,KAAK;AAGpE,SAASC,kBAAkB,QAAQ,aAAa;AAEhD,OAAOC,OAAO,MAAM,cAAc;AAElC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,MAAkB,EAAa;EACpD,IAAI,CAAC,EAACA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,IAAI,KAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,IAAI,MAAK,QAAQ,MAAKD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,UAAU,GAAE;IACvE,IAAMC,GAAG,GAA+B,EAAE;IAC1C,SAAAC,EAAA,MAAAC,YAAA,GAAmBC,MAAM,CAACC,IAAI,CAACP,MAAM,CAACE,UAAU,CAAC,EAAAE,EAAA,GAAAC,YAAA,CAAAG,MAAA,EAAAJ,EAAA,IAAE;MAA9C,IAAMK,IAAI,GAAAJ,YAAA,CAAAD,EAAA;MACd,IAAMM,KAAK,GAAGX,YAAY,CAACC,MAAM,CAACE,UAAU,CAACO,IAAI,CAAC,CAAC;MACnD,IAAIC,KAAK,EAAE;QACVP,GAAG,CAACM,IAAI,CAAC,GAAGC,KAAK;;;IAInB,IAAIC,KAAK,CAACC,OAAO,CAACZ,MAAM,CAACa,QAAQ,CAAC,EAAE;MACnC,OAAOlB,CAAC,CACNmB,MAAM,CAACX,GAAG,CAAC,CACXY,OAAO,EAAE,CACTF,QAAQ,CAACb,MAAM,CAACa,QAAQ,CAACG,MAAM,CAAC,UAACC,GAAG,EAAEC,CAAS;QAAA,OAAKZ,MAAA,CAAAa,MAAA,CAAAb,MAAA,CAAAa,MAAA,KAAMF,GAAG,GAAAG,eAAA,KAAGF,CAAC,EAAG,IAAI;MAAA,CAAG,EAAE,EAAE,CAAC,CAAC;;IAEpF,OAAOvB,CAAC,CAACmB,MAAM,CAACX,GAAG,CAAC,CAACY,OAAO,EAAE;;EAG/B,IAAI,CAAAf,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,IAAI,MAAK,OAAO,KAAID,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEqB,KAAK,GAAE;IAC9C,IAAIV,KAAK,CAACC,OAAO,CAACZ,MAAM,CAACqB,KAAK,CAAC,IAAIrB,MAAM,CAACqB,KAAK,CAACb,MAAM,GAAG,CAAC,EAAE;MAC3D,IAAMc,GAAG,GAA2C,EAAE;MAAC,IAAAC,SAAA,GAAAC,0BAAA,CACpCxB,MAAM,CAACqB,KAAK;QAAAI,KAAA;MAAA;QAA/B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAiC;UAAA,IAAtBC,IAAI,GAAAJ,KAAA,CAAAK,KAAA;UACd,IAAMpB,MAAK,GAAGX,YAAY,CAAC8B,IAAI,CAAC;UAChC,IAAInB,MAAK,EAAE;YACVY,GAAG,CAACS,IAAI,CAACrB,MAAK,CAAC;;;MAEhB,SAAAsB,GAAA;QAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA;MAAA;QAAAT,SAAA,CAAAW,CAAA;MAAA;MACD,OAAOvC,CAAC,CAACwC,KAAK,CAACb,GAAoC,CAAC;;IAErD,OAAO3B,CAAC,CAACyC,KAAK,CAACrC,YAAY,CAACC,MAAM,CAACqB,KAAmB,CAAC,CAAC;;EAGzD,IAAIrB,MAAM,CAACqC,KAAK,IAAI1B,KAAK,CAACC,OAAO,CAACZ,MAAM,CAACqC,KAAK,CAAC,EAAE;IAChD,OAAO1C,CAAC,CAAC2C,KAAK,CACbtC,MAAM,CAACqC,KAAK,CAACE,GAAG,CAAC,UAAAC,WAAW;MAAA,OAAIzC,YAAY,CAACyC,WAAW,CAAC;IAAA,EAIxD,CACD;;EAGF,IAAIxC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEyC,MAAM,EAAE;IACnB,OAAO9C,CAAC,CAAC+C,GAAG,EAAE,CAACC,MAAM,CAAC7C,OAAO,CAACE,MAAM,CAACyC,MAAM,CAAC,EAAE,UAACX,KAAc;MAAA,OAAM;QAClEc,MAAM,EAAE;UAAEd,KAAK,EAALA,KAAK;UAAEW,MAAM,EAAEzC,MAAM,CAACyC;QAAM;OACtC;IAAA,CAAC,CAAC;;EAGJ,IACC,CAAAzC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,IAAI,KACZ,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,IAAI,MAAK,QAAQ,IACzB,OAAQN,CAAyE,CAChFkD,MAAM,CAAC7C,MAAM,CAACC,IAAI,CAAC,CACnB,KAAK,UAAU,EACf;IACD,OAAQN,CAAyE,CAChFkD,MAAM,CAAC7C,MAAM,CAACC,IAAI,CAAC,CACnB,EAAE;;EAEJ,OAAON,CAAC,CAACmB,MAAM,CAAC;IAAEgC,IAAI,EAAEnD,CAAC,CAAC+C,GAAG;EAAE,CAAE,CAAC,CAAC3B,OAAO,EAAE;AAC7C,CAAC;AAED,WAAagC,SAAS;EAAA,SAAAA,UAAA;IAAAC,eAAA,OAAAD,SAAA;EAAA;EAAAE,YAAA,CAAAF,SAAA;IAAAG,GAAA;IAAApB,KAAA,EAYd,SAAAqB,SAASnD,MAAkB,EAAE8C,IAAU,EAAEM,OAA8B;;MAC7E,IAAMC,GAAG,GAAGtD,YAAY,CAACC,MAAM,CAAC;MAChC,IAAMsD,MAAM,GAAGD,GAAG,CAACE,SAAS,CAACT,IAAI,CAAC;MAClC,IAAI,CAACQ,MAAM,CAACE,OAAO,EAAE;QACpB,IAAMC,MAAM,GAAG,IAAI,CAACC,aAAa,CAAC,CAAAC,EAAA,IAAAC,EAAA,GAAAN,MAAM,CAACO,KAAK,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,MAAM,cAAAH,EAAA,cAAAA,EAAA,GAAI,EAAE,CAAC;QAC7D,IAAIF,MAAM,EAAE;UACX,IAAIL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,MAAM,EAAE;YACpB,OAAON,MAAM;;UAEd,MAAM,IAAI5D,kBAAkB,CAAC4D,MAAM,CAAC;;;MAGtC,OAAOO,SAAS;IACjB;IACA;EAAA;IAAAd,GAAA;IAAApB,KAAA,EACQ,SAAA4B,cAAcD,MAA8B;MACnD,IAAIA,MAAM,IAAI9C,KAAK,CAACC,OAAO,CAAC6C,MAAM,CAAC,IAAIA,MAAM,CAACjD,MAAM,GAAG,CAAC,EAAE;QACzD,OAAOiD,MAAM,CAAClB,GAAG,CAAC,UAACsB,KAAe,EAAI;;UACrC,IAAII,OAAO;UACX,IAAIC,OAAO;UACX,IAAItB,MAAM;UACV,IAAIuB,UAAU;UAEdA,UAAU,GAAGN,KAAK,CAACO,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC;UAEjC,IAAMC,KAAK,GAAGzB,MAAM,CAACgB,KAAK,CAACO,IAAI,CAACP,KAAK,CAACO,IAAI,CAAC5D,MAAM,GAAG,CAAC,CAAC,CAAC;UACvD,IAAM+D,YAAY,GAAGV,KAAK,CAACO,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC;UACzC,IAAIR,KAAK,CAACW,IAAI,KAAK5E,YAAY,CAAC6E,OAAO,EAAE;YACxCP,OAAO,GAAG,UAAU;YACpBC,UAAU,MAAAO,MAAA,CAAMH,YAAY,cAAW;YACvC3B,MAAM,GAAG;cAAE+B,KAAK,EAAEd,KAAK,CAACe;YAAO,CAAE;YACjCX,OAAO,8BAAAS,MAAA,CAA8Bb,KAAK,CAACe,OAAO,WAAQ;WAC1D,MAAM,IAAIf,KAAK,CAACW,IAAI,KAAK5E,YAAY,CAACiF,SAAS,EAAE;YACjDX,OAAO,GAAG,UAAU;YACpBC,UAAU,MAAAO,MAAA,CAAMH,YAAY,cAAW;YACvC3B,MAAM,GAAG;cAAE+B,KAAK,EAAEd,KAAK,CAACiB;YAAO,CAAE;YACjCb,OAAO,+BAAAS,MAAA,CAA+Bb,KAAK,CAACiB,OAAO,WAAQ;WAC3D,MAAM,IAAIjB,KAAK,CAACW,IAAI,KAAK5E,YAAY,CAACmF,MAAM,EAAE;YAC9C,IAAAC,IAAA,GAA2B,CAAApB,EAAA,GAAAC,KAAK,CAACjB,MAAM,cAAAgB,EAAA,cAAAA,EAAA,GAAI,EAAE;cAArC9B,KAAK,GAAAkD,IAAA,CAALlD,KAAK;cAAEW,MAAM,GAAAuC,IAAA,CAANvC,MAAM;YAKrB,IAAI,OAAOX,KAAK,KAAK,WAAW,EAAE;cACjCmC,OAAO,kBAAAS,MAAA,CAAiBP,UAAU,mBAAe;aACjD,MAAM;cACNF,OAAO,cAAAS,MAAA;cACN;cACA,OAAO5C,KAAK,KAAK,QAAQ,GAAGmD,IAAI,CAACC,SAAS,CAACpD,KAAK,CAAC,GAAGA,KACrD,eAAA4C,MAAA,CAAUP,UAAU,qBAAAO,MAAA,CAAgBjC,MAAM,kBAAc;;YAGzDG,MAAM,GAAG;cAAEd,KAAK,EAALA;YAAK,CAAE;;UAGnB,OAAO;YACNoC,OAAO,EAAEA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAII,KAAK;YACzBC,YAAY,EAAEA,YAAY,OAAAG,MAAA,CAAOH,YAAY,IAAK,EAAE;YACpDJ,UAAU,EAAEA,UAAU,OAAAO,MAAA,CAAOP,UAAU,IAAK,GAAG;YAC/C;YACAvB,MAAM,EAAEA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI;cAAEd,KAAK,EAAE+B,KAAK,CAACI;YAAO,CAAE;YAC1CA,OAAO,EAAEA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIJ,KAAK,CAACI;WACG;QAC/B,CAAC,CAAC;;MAEH,OAAOD,SAAS;IACjB;EAAC;IAAAd,GAAA;IAAApB,KAAA;IA1ED;IACO,SAAAqD,QAAA,EAAc;MACpB,IAAI,CAACpC,SAAS,CAACqC,iBAAiB,EAAE;QACjCrC,SAAS,CAACqC,iBAAiB,GAAG,IAAIrC,SAAS,EAAE;;MAE9C,OAAOA,SAAS,CAACqC,iBAAiB;IACnC;EAAC;EAAA,OAAArC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}