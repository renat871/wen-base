{"ast":null,"code":"import _toConsumableArray from \"D:/projects/react/wen-base/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { encodeErrorSignature } from './api/errors_api.js';\nimport { decodeParameters } from './api/parameters_api.js';\nimport { jsonInterfaceMethodToString } from './utils.js';\nexport var decodeContractErrorData = function decodeContractErrorData(errorsAbi, error) {\n  if (error === null || error === void 0 ? void 0 : error.data) {\n    var errorName;\n    var errorSignature;\n    var errorArgs;\n    try {\n      var errorSha = error.data.slice(0, 10);\n      var errorAbi = errorsAbi.find(function (abi) {\n        return encodeErrorSignature(abi).startsWith(errorSha);\n      });\n      if (errorAbi === null || errorAbi === void 0 ? void 0 : errorAbi.inputs) {\n        errorName = errorAbi.name;\n        errorSignature = jsonInterfaceMethodToString(errorAbi);\n        // decode abi.inputs according to EIP-838\n        errorArgs = decodeParameters(_toConsumableArray(errorAbi.inputs), error.data.substring(10));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n    if (errorName) {\n      error.setDecodedProperties(errorName, errorSignature, errorArgs);\n    }\n  }\n};","map":{"version":3,"names":["encodeErrorSignature","decodeParameters","jsonInterfaceMethodToString","decodeContractErrorData","errorsAbi","error","data","errorName","errorSignature","errorArgs","errorSha","slice","errorAbi","find","abi","startsWith","inputs","name","_toConsumableArray","substring","err","console","setDecodedProperties"],"sources":["D:\\projects\\react\\wen-base\\node_modules\\web3-eth-abi\\src\\decode_contract_error_data.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Eip838ExecutionError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\n\nimport { encodeErrorSignature } from './api/errors_api.js';\nimport { decodeParameters } from './api/parameters_api.js';\nimport { jsonInterfaceMethodToString } from './utils.js';\n\nexport const decodeContractErrorData = (\n\terrorsAbi: AbiErrorFragment[],\n\terror: Eip838ExecutionError,\n) => {\n\tif (error?.data) {\n\t\tlet errorName: string | undefined;\n\t\tlet errorSignature: string | undefined;\n\t\tlet errorArgs: { [K in string]: unknown } | undefined;\n\t\ttry {\n\t\t\tconst errorSha = error.data.slice(0, 10);\n\t\t\tconst errorAbi = errorsAbi.find(abi => encodeErrorSignature(abi).startsWith(errorSha));\n\n\t\t\tif (errorAbi?.inputs) {\n\t\t\t\terrorName = errorAbi.name;\n\t\t\t\terrorSignature = jsonInterfaceMethodToString(errorAbi);\n\t\t\t\t// decode abi.inputs according to EIP-838\n\t\t\t\terrorArgs = decodeParameters([...errorAbi.inputs], error.data.substring(10));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tif (errorName) {\n\t\t\terror.setDecodedProperties(errorName, errorSignature, errorArgs);\n\t\t}\n\t}\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;;AAoBA,SAASA,oBAAoB,QAAQ,qBAAqB;AAC1D,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,2BAA2B,QAAQ,YAAY;AAExD,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CACnCC,SAA6B,EAC7BC,KAA2B,EACxB;EACH,IAAIA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,EAAE;IAChB,IAAIC,SAA6B;IACjC,IAAIC,cAAkC;IACtC,IAAIC,SAAiD;IACrD,IAAI;MACH,IAAMC,QAAQ,GAAGL,KAAK,CAACC,IAAI,CAACK,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACxC,IAAMC,QAAQ,GAAGR,SAAS,CAACS,IAAI,CAAC,UAAAC,GAAG;QAAA,OAAId,oBAAoB,CAACc,GAAG,CAAC,CAACC,UAAU,CAACL,QAAQ,CAAC;MAAA,EAAC;MAEtF,IAAIE,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,MAAM,EAAE;QACrBT,SAAS,GAAGK,QAAQ,CAACK,IAAI;QACzBT,cAAc,GAAGN,2BAA2B,CAACU,QAAQ,CAAC;QACtD;QACAH,SAAS,GAAGR,gBAAgB,CAAAiB,kBAAA,CAAKN,QAAQ,CAACI,MAAM,GAAGX,KAAK,CAACC,IAAI,CAACa,SAAS,CAAC,EAAE,CAAC,CAAC;;KAE7E,CAAC,OAAOC,GAAG,EAAE;MACbC,OAAO,CAAChB,KAAK,CAACe,GAAG,CAAC;;IAEnB,IAAIb,SAAS,EAAE;MACdF,KAAK,CAACiB,oBAAoB,CAACf,SAAS,EAAEC,cAAc,EAAEC,SAAS,CAAC;;;AAGnE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}